.TH "drm_dp_mst_topology_mgr_resume" 9 "drm_dp_mst_topology_mgr_resume" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
drm_dp_mst_topology_mgr_resume \- resume the MST manager
.SH SYNOPSIS
.B "int" drm_dp_mst_topology_mgr_resume
.BI "(struct drm_dp_mst_topology_mgr *mgr "  ","
.BI "bool sync "  ");"
.SH ARGUMENTS
.IP "mgr" 12
manager to resume
.IP "sync" 12
whether or not to perform topology reprobing synchronously
.SH "DESCRIPTION"
This will fetch DPCD and see if the device is still there,
if it is, it will rewrite the MSTM control bits, and return.

If the device fails this returns -1, and the driver should do
a full MST reprobe, in case we were undocked.

During system resume (where it is assumed that the driver will be calling
\fBdrm_atomic_helper_resume\fP) this function should be called beforehand with
\fIsync\fP set to true. In contexts like runtime resume where the driver is not
expected to be calling \fBdrm_atomic_helper_resume\fP, this function should be
called with \fIsync\fP set to false in order to avoid deadlocking.
.SH "RETURN"
-1 if the MST topology was removed while we were suspended, 0
otherwise.
