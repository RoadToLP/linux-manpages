.TH "radeon_compute_pll_avivo" 9 "radeon_compute_pll_avivo" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
radeon_compute_pll_avivo \- compute PLL paramaters
.SH SYNOPSIS
.B "void" radeon_compute_pll_avivo
.BI "(struct radeon_pll *pll "  ","
.BI "u32 freq "  ","
.BI "u32 *dot_clock_p "  ","
.BI "u32 *fb_div_p "  ","
.BI "u32 *frac_fb_div_p "  ","
.BI "u32 *ref_div_p "  ","
.BI "u32 *post_div_p "  ");"
.SH ARGUMENTS
.IP "pll" 12
information about the PLL
.IP "freq" 12
target frequency
.IP "dot_clock_p" 12
resulting pixel clock
.IP "fb_div_p" 12
resulting feedback divider
.IP "frac_fb_div_p" 12
fractional part of the feedback divider
.IP "ref_div_p" 12
resulting reference divider
.IP "post_div_p" 12
resulting reference divider
.SH "DESCRIPTION"
Try to calculate the PLL parameters to generate the given frequency:
dot_clock = (ref_freq * feedback_div) / (ref_div * post_div)
