.TH "clk_set_rate" 9 "clk_set_rate" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
clk_set_rate \- specify a new rate for clk
.SH SYNOPSIS
.B "int" clk_set_rate
.BI "(struct clk *clk "  ","
.BI "unsigned long rate "  ");"
.SH ARGUMENTS
.IP "clk" 12
the clk whose rate is being changed
.IP "rate" 12
the new rate for clk
.SH "DESCRIPTION"
In the simplest case clk_set_rate will only adjust the rate of clk.

Setting the CLK_SET_RATE_PARENT flag allows the rate change operation to
propagate up to clk's parent; whether or not this happens depends on the
outcome of clk's .round_rate implementation.  If *parent_rate is unchanged
after calling .round_rate then upstream parent propagation is ignored.  If
*parent_rate comes back with a new rate for clk's parent then we propagate
up to clk's parent and set its rate.  Upward propagation will continue
until either a clk does not support the CLK_SET_RATE_PARENT flag or
\&.round_rate stops requesting changes to clk's parent_rate.

Rate changes are accomplished via tree traversal that also recalculates the
rates for the clocks and fires off POST_RATE_CHANGE notifiers.

Returns 0 on success, -EERROR otherwise.
