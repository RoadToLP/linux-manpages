.TH "synchronize_hardirq" 9 "synchronize_hardirq" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
synchronize_hardirq \- wait for pending hard IRQ handlers (on other CPUs)
.SH SYNOPSIS
.B "bool" synchronize_hardirq
.BI "(unsigned int irq "  ");"
.SH ARGUMENTS
.IP "irq" 12
interrupt number to wait for

This function waits for any pending hard IRQ handlers for this
interrupt to complete before returning. If you use this
function while holding a resource the IRQ handler may need you
will deadlock. It does not take associated threaded handlers
into account.

Do not use this for shutdown scenarios where you must be sure
that all parts (hardirq and threaded handler) have completed.
.SH "RETURN"
false if a threaded handler is active.

This function may be called - with care - from IRQ context.

It does not check whether there is an interrupt in flight at the
hardware level, but not serviced yet, as this might deadlock when
called with interrupts disabled and the target CPU of the interrupt
is the current CPU.
