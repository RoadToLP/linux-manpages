.TH "i40e_get_lump" 9 "i40e_get_lump" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
i40e_get_lump \- find a lump of free generic resource
.SH SYNOPSIS
.B "int" i40e_get_lump
.BI "(struct i40e_pf *pf "  ","
.BI "struct i40e_lump_tracking *pile "  ","
.BI "u16 needed "  ","
.BI "u16 id "  ");"
.SH ARGUMENTS
.IP "pf" 12
board private structure
.IP "pile" 12
the pile of resource to search
.IP "needed" 12
the number of items needed
.IP "id" 12
an owner id to stick on the items assigned
.SH "DESCRIPTION"
Returns the base item index of the lump, or negative for error

The search_hint trick and lack of advanced fit-finding only work
because we're highly likely to have all the same size lump requests.
Linear search time and any fragmentation should be minimal.
