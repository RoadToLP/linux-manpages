.TH "ntfs_are_names_equal" 9 "ntfs_are_names_equal" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
ntfs_are_names_equal \- compare two Unicode names for equality
.SH SYNOPSIS
.B "bool" ntfs_are_names_equal
.BI "(const ntfschar *s1 "  ","
.BI "size_t s1_len "  ","
.BI "const ntfschar *s2 "  ","
.BI "size_t s2_len "  ","
.BI "const IGNORE_CASE_BOOL ic "  ","
.BI "const ntfschar *upcase "  ","
.BI "const u32 upcase_size "  ");"
.SH ARGUMENTS
.IP "s1" 12
name to compare to \fIs2\fP
.IP "s1_len" 12
length in Unicode characters of \fIs1\fP
.IP "s2" 12
name to compare to \fIs1\fP
.IP "s2_len" 12
length in Unicode characters of \fIs2\fP
.IP "ic" 12
ignore case bool
.IP "upcase" 12
upcase table (only if \fIic\fP == IGNORE_CASE)
.IP "upcase_size" 12
length in Unicode characters of \fIupcase\fP (if present)
.SH "DESCRIPTION"
Compare the names \fIs1\fP and \fIs2\fP and return 'true' (1) if the names are
identical, or 'false' (0) if they are not identical. If \fIic\fP is IGNORE_CASE,
the \fIupcase\fP table is used to performa a case insensitive comparison.
