.TH "sysfs_change_owner" 9 "sysfs_change_owner" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
sysfs_change_owner \- change owner of the given object.
.SH SYNOPSIS
.B "int" sysfs_change_owner
.BI "(struct kobject *kobj "  ","
.BI "kuid_t kuid "  ","
.BI "kgid_t kgid "  ");"
.SH ARGUMENTS
.IP "kobj" 12
object.
.IP "kuid" 12
new owner's kuid
.IP "kgid" 12
new owner's kgid
.SH "DESCRIPTION"
Change the owner of the default directory, files, groups, and attributes of
\fIkobj\fP to \fIkuid\fP/\fIkgid\fP. Note that sysfs_change_owner mirrors how the sysfs
entries for a kobject are added by driver core. In summary,
\fBsysfs_change_owner\fP takes care of the default directory entry for \fIkobj\fP,
the default attributes associated with the ktype of \fIkobj\fP and the default
attributes associated with the ktype of \fIkobj\fP.
Additional properties not added by driver core have to be changed by the
driver or subsystem which created them. This is similar to how
driver/subsystem specific entries are removed.

Returns 0 on success or error code on failure.
