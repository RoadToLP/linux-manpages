.TH "configfs_read_bin_file" 9 "configfs_read_bin_file" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
configfs_read_bin_file \- read a binary attribute.
.SH SYNOPSIS
.B "ssize_t" configfs_read_bin_file
.BI "(struct file *file "  ","
.BI "char __user *buf "  ","
.BI "size_t count "  ","
.BI "loff_t *ppos "  ");"
.SH ARGUMENTS
.IP "file" 12
file pointer.
.IP "buf" 12
buffer to fill.
.IP "count" 12
number of bytes to read.
.IP "ppos" 12
starting offset in file.

Userspace wants to read a binary attribute file. The attribute
descriptor is in the file's ->d_fsdata. The target item is in the
directory's ->d_fsdata.

We check whether we need to refill the buffer. If so we will
call the attributes' attr->\fBread\fP twice. The first time we
will pass a NULL as a buffer pointer, which the attributes' method
will use to return the size of the buffer required. If no error
occurs we will allocate the buffer using vmalloc and call
attr->\fBread\fP again passing that buffer as an argument.
Then we just copy to user-space using simple_read_from_buffer.
