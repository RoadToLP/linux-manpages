.TH "i915_perf_open_ioctl_locked" 9 "i915_perf_open_ioctl_locked" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
i915_perf_open_ioctl_locked \- DRM ioctl() for userspace to open a stream FD
.SH SYNOPSIS
.B "int" i915_perf_open_ioctl_locked
.BI "(struct i915_perf *perf "  ","
.BI "struct drm_i915_perf_open_param *param "  ","
.BI "struct perf_open_properties *props "  ","
.BI "struct drm_file *file "  ");"
.SH ARGUMENTS
.IP "perf" 12
i915 perf instance
.IP "param" 12
The open parameters passed to 'DRM_I915_PERF_OPEN`
.IP "props" 12
individually validated u64 property value pairs
.IP "file" 12
drm file
.SH "DESCRIPTION"
See \fBi915_perf_ioctl_open\fP for interface details.

Implements further stream config validation and stream initialization on
behalf of \fBi915_perf_open_ioctl\fP with the \fIperf->lock\fP mutex
taken to serialize with any non-file-operation driver hooks.

In the case where userspace is interested in OA unit metrics then further
config validation and stream initialization details will be handled by
\fBi915_oa_stream_init\fP. The code here should only validate config state that
will be relevant to all stream types / backends.
.SH "NOTE"
at this point the \fIprops\fP have only been validated in isolation and
it's still necessary to validate that the combination of properties makes
sense.
.SH "RETURN"
zero on success or a negative error code.
