.TH "preempt_schedule_notrace" 9 "preempt_schedule_notrace" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
preempt_schedule_notrace \- preempt_schedule called by tracing
.SH SYNOPSIS
.B "__visible void notrace" preempt_schedule_notrace
.BI "(void "  ");"
.SH ARGUMENTS
.IP "void" 12
no arguments
.SH "DESCRIPTION"

The tracing infrastructure uses preempt_enable_notrace to prevent
recursion and tracing preempt enabling caused by the tracing
infrastructure itself. But as tracing can happen in areas coming
from userspace or just about to enter userspace, a preempt enable
can occur before \fBuser_exit\fP is called. This will cause the scheduler
to be called when the system is still in usermode.

To prevent this, the preempt_enable_notrace will use this function
instead of \fBpreempt_schedule\fP to exit user context if needed before
calling the scheduler.
