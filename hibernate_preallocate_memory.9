.TH "hibernate_preallocate_memory" 9 "hibernate_preallocate_memory" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
hibernate_preallocate_memory \- Preallocate memory for hibernation image.
.SH SYNOPSIS
.B "int" hibernate_preallocate_memory
.BI "(void "  ");"
.SH ARGUMENTS
.IP "void" 12
no arguments
.SH "DESCRIPTION"

To create a hibernation image it is necessary to make a copy of every page
frame in use.  We also need a number of page frames to be free during
hibernation for allocations made while saving the image and for device
drivers, in case they need to allocate memory from their hibernation
callbacks (these two numbers are given by PAGES_FOR_IO (which is a rough
estimate) and reserved_size divided by PAGE_SIZE (which is tunable through
/sys/power/reserved_size, respectively).  To make this happen, we compute the
total number of available page frames and allocate at least

([page frames total] + PAGES_FOR_IO + [metadata pages]) / 2
+ 2 * DIV_ROUND_UP(reserved_size, PAGE_SIZE)

of them, which corresponds to the maximum size of a hibernation image.

If image_size is set below the number following from the above formula,
the preallocation of memory is continued until the total number of saveable
pages in the system is below the requested image size or the minimum
acceptable image size returned by \fBminimum_image_size\fP, whichever is greater.
