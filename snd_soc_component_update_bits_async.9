.TH "snd_soc_component_update_bits_async" 9 "snd_soc_component_update_bits_async" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
snd_soc_component_update_bits_async \- Perform asynchronous read/modify/write cycle
.SH SYNOPSIS
.B "int" snd_soc_component_update_bits_async
.BI "(struct snd_soc_component *component "  ","
.BI "unsigned int reg "  ","
.BI "unsigned int mask "  ","
.BI "unsigned int val "  ");"
.SH ARGUMENTS
.IP "component" 12
Component to update
.IP "reg" 12
Register to update
.IP "mask" 12
Mask that specifies which bits to update
.IP "val" 12
New value for the bits specified by mask
.SH "DESCRIPTION"
This function is similar to \fBsnd_soc_component_update_bits\fP, but the update
operation is scheduled asynchronously. This means it may not be completed
when the function returns. To make sure that all scheduled updates have been
completed \fBsnd_soc_component_async_complete\fP must be called.
.SH "RETURN"
1 if the operation was successful and the value of the register
changed, 0 if the operation was successful, but the value did not change.
Returns a negative error code otherwise.
