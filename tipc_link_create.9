.TH "tipc_link_create" 9 "tipc_link_create" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
tipc_link_create \- create a new link
.SH SYNOPSIS
.B "bool" tipc_link_create
.BI "(struct net *net "  ","
.BI "char *if_name "  ","
.BI "int bearer_id "  ","
.BI "int tolerance "  ","
.BI "char net_plane "  ","
.BI "u32 mtu "  ","
.BI "int priority "  ","
.BI "u32 min_win "  ","
.BI "u32 max_win "  ","
.BI "u32 session "  ","
.BI "u32 self "  ","
.BI "u32 peer "  ","
.BI "u8 *peer_id "  ","
.BI "u16 peer_caps "  ","
.BI "struct tipc_link *bc_sndlink "  ","
.BI "struct tipc_link *bc_rcvlink "  ","
.BI "struct sk_buff_head *inputq "  ","
.BI "struct sk_buff_head *namedq "  ","
.BI "struct tipc_link **link "  ");"
.SH ARGUMENTS
.IP "net" 12
pointer to associated network namespace
.IP "if_name" 12
associated interface name
.IP "bearer_id" 12
id (index) of associated bearer
.IP "tolerance" 12
link tolerance to be used by link
.IP "net_plane" 12
network plane (A,B,c..) this link belongs to
.IP "mtu" 12
mtu to be advertised by link
.IP "priority" 12
priority to be used by link
.IP "min_win" 12
minimal send window to be used by link
.IP "max_win" 12
maximal send window to be used by link
.IP "session" 12
session to be used by link
.IP "self" 12
local unicast link id
.IP "peer" 12
node id of peer node
.IP "peer_id" 12
128-bit ID of peer
.IP "peer_caps" 12
bitmap describing peer node capabilities
.IP "bc_sndlink" 12
the namespace global link used for broadcast sending
.IP "bc_rcvlink" 12
the peer specific link used for broadcast reception
.IP "inputq" 12
queue to put messages ready for delivery
.IP "namedq" 12
queue to put binding table update messages ready for delivery
.IP "link" 12
return value, pointer to put the created link
.SH "RETURN"
true if link was created, otherwise false
