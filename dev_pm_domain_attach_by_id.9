.TH "dev_pm_domain_attach_by_id" 9 "dev_pm_domain_attach_by_id" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
dev_pm_domain_attach_by_id \- Associate a device with one of its PM domains.
.SH SYNOPSIS
.B "struct device *" dev_pm_domain_attach_by_id
.BI "(struct device *dev "  ","
.BI "unsigned int index "  ");"
.SH ARGUMENTS
.IP "dev" 12
The device used to lookup the PM domain.
.IP "index" 12
The index of the PM domain.
.SH "DESCRIPTION"
As \fIdev\fP may only be attached to a single PM domain, the backend PM domain
provider creates a virtual device to attach instead. If attachment succeeds,
the ->\fBdetach\fP callback in the struct dev_pm_domain are assigned by the
corresponding backend attach function, as to deal with detaching of the
created virtual device.

This function should typically be invoked by a driver during the probe phase,
in case its device requires power management through multiple PM domains. The
driver may benefit from using the received device, to configure device-links
towards its original device. Depending on the use-case and if needed, the
links may be dynamically changed by the driver, which allows it to control
the power to the PM domains independently from each other.

Callers must ensure proper synchronization of this function with power
management callbacks.

Returns the virtual created device when successfully attached to its PM
domain, NULL in case \fIdev\fP don't need a PM domain, else an \fBERR_PTR\fP.
Note that, to detach the returned virtual device, the driver shall call
\fBdev_pm_domain_detach\fP on it, typically during the remove phase.
