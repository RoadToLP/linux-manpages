.TH "check_leaf" 9 "check_leaf" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
check_leaf \- check leaf node.
.SH SYNOPSIS
.B "int" check_leaf
.BI "(struct ubifs_info *c "  ","
.BI "struct ubifs_zbranch *zbr "  ","
.BI "void *priv "  ");"
.SH ARGUMENTS
.IP "c" 12
UBIFS file-system description object
.IP "zbr" 12
zbranch of the leaf node to check
.IP "priv" 12
FS checking information
.SH "DESCRIPTION"
This is a helper function for '\fBdbg_check_filesystem\fP' which is called for
every single leaf node while walking the indexing tree. It checks that the
leaf node referred from the indexing tree exists, has correct CRC, and does
some other basic validation. This function is also responsible for building
an RB-tree of inodes - it adds all inodes into the RB-tree. It also
calculates reference count, size, etc for each inode in order to later
compare them to the information stored inside the inodes and detect possible
inconsistencies. Returns zero in case of success and a negative error code
in case of failure.
