.TH "wimax_state_change" 9 "wimax_state_change" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
wimax_state_change \- Set the current state of a WiMAX device
.SH SYNOPSIS
.B "void" wimax_state_change
.BI "(struct wimax_dev *wimax_dev "  ","
.BI "enum wimax_st new_state "  ");"
.SH ARGUMENTS
.IP "wimax_dev" 12
WiMAX device descriptor (properly referenced)
.IP "new_state" 12
New state to switch to
.SH "DESCRIPTION"
This implements the state changes for the wimax devices. It will

- verify that the state transition is legal (for now it'll just
print a warning if not) according to the table in
linux/wimax.h's documentation for 'enum wimax_st'.

- perform the actions needed for leaving the current state and
whichever are needed for entering the new state.

- issue a report to user space indicating the new state (and an
optional payload with information about the new state).
.SH "NOTE"
\fIwimax_dev\fP must be locked
