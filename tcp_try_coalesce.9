.TH "tcp_try_coalesce" 9 "tcp_try_coalesce" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
tcp_try_coalesce \- try to merge skb to prior one
.SH SYNOPSIS
.B "bool" tcp_try_coalesce
.BI "(struct sock *sk "  ","
.BI "struct sk_buff *to "  ","
.BI "struct sk_buff *from "  ","
.BI "bool *fragstolen "  ");"
.SH ARGUMENTS
.IP "sk" 12
socket
.IP "to" 12
prior buffer
.IP "from" 12
buffer to add in queue
.IP "fragstolen" 12
pointer to boolean
.SH "DESCRIPTION"
Before queueing skb \fIfrom\fP after \fIto\fP, try to merge them
to reduce overall memory use and queue lengths, if cost is small.
Packets in ofo or receive queues can stay a long time.
Better try to coalesce them right now to avoid future collapses.
Returns true if caller should free \fIfrom\fP instead of queueing it
