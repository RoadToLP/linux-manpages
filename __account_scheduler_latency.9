.TH "__account_scheduler_latency" 9 "__account_scheduler_latency" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
__account_scheduler_latency \- record an occurred latency @tsk - the task struct of the task hitting the latency @usecs - the duration of the latency in microseconds @inter - 1 if the sleep was interruptible, 0 if uninterruptible
.SH SYNOPSIS
.B "void" __account_scheduler_latency
.BI "(struct task_struct *tsk "  ","
.BI "int usecs "  ","
.BI "int inter "  ");"
.SH ARGUMENTS
.IP "tsk" 12
-- undescribed --
.IP "usecs" 12
-- undescribed --
.IP "inter" 12
-- undescribed --
.SH "DESCRIPTION"

This function is the main entry point for recording latency entries
as called by the scheduler.

This function has a few special cases to deal with normal 'non-latency'
sleeps: specifically, interruptible sleep longer than 5 msec is skipped
since this usually is caused by waiting for events via \fBselect\fP and co.

Negative latencies (caused by time going backwards) are also explicitly
skipped.
