.TH "bitmap_fold" 9 "bitmap_fold" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
bitmap_fold \- fold larger bitmap into smaller, modulo specified size
.SH SYNOPSIS
.B "void" bitmap_fold
.BI "(unsigned long *dst "  ","
.BI "const unsigned long *orig "  ","
.BI "unsigned int sz "  ","
.BI "unsigned int nbits "  ");"
.SH ARGUMENTS
.IP "dst" 12
resulting smaller bitmap
.IP "orig" 12
original larger bitmap
.IP "sz" 12
specified size
.IP "nbits" 12
number of bits in each of these bitmaps
.SH "DESCRIPTION"
For each bit oldbit in \fIorig\fP, set bit oldbit mod \fIsz\fP in \fIdst\fP.
Clear all other bits in \fIdst\fP.  See further the comment and
Example [2] for \fBbitmap_onto\fP for why and how to use this.
