.TH "sgx_alloc_epc_page" 9 "sgx_alloc_epc_page" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
sgx_alloc_epc_page \- Allocate an EPC page
.SH SYNOPSIS
.B "struct sgx_epc_page *" sgx_alloc_epc_page
.BI "(void *owner "  ","
.BI "bool reclaim "  ");"
.SH ARGUMENTS
.IP "owner" 12
the owner of the EPC page
.IP "reclaim" 12
reclaim pages if necessary
.SH "DESCRIPTION"
Iterate through EPC sections and borrow a free EPC page to the caller. When a
page is no longer needed it must be released with \fBsgx_free_epc_page\fP. If
\fIreclaim\fP is set to true, directly reclaim pages when we are out of pages. No
mm's can be locked when \fIreclaim\fP is set to true.

Finally, wake up ksgxd when the number of pages goes below the watermark
before returning back to the caller.
.SH "RETURN"
an EPC page,
-errno on error
