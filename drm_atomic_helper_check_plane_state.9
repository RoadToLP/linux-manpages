.TH "drm_atomic_helper_check_plane_state" 9 "drm_atomic_helper_check_plane_state" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
drm_atomic_helper_check_plane_state \- Check plane state for validity
.SH SYNOPSIS
.B "int" drm_atomic_helper_check_plane_state
.BI "(struct drm_plane_state *plane_state "  ","
.BI "const struct drm_crtc_state *crtc_state "  ","
.BI "int min_scale "  ","
.BI "int max_scale "  ","
.BI "bool can_position "  ","
.BI "bool can_update_disabled "  ");"
.SH ARGUMENTS
.IP "plane_state" 12
plane state to check
.IP "crtc_state" 12
CRTC state to check
.IP "min_scale" 12
minimum \fIsrc\fP:\fIdest\fP scaling factor in 16.16 fixed point
.IP "max_scale" 12
maximum \fIsrc\fP:\fIdest\fP scaling factor in 16.16 fixed point
.IP "can_position" 12
is it legal to position the plane such that it
doesn't cover the entire CRTC?  This will generally
only be false for primary planes.
.IP "can_update_disabled" 12
can the plane be updated while the CRTC
is disabled?
.SH "DESCRIPTION"
Checks that a desired plane update is valid, and updates various
bits of derived state (clipped coordinates etc.). Drivers that provide
their own plane handling rather than helper-provided implementations may
still wish to call this function to avoid duplication of error checking
code.
.SH "RETURN"
Zero if update appears valid, error code on failure
