.TH "gen_pool_best_fit" 9 "gen_pool_best_fit" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
gen_pool_best_fit \- find the best fitting region of memory macthing the size requirement (no alignment constraint)
.SH SYNOPSIS
.B "unsigned long" gen_pool_best_fit
.BI "(unsigned long *map "  ","
.BI "unsigned long size "  ","
.BI "unsigned long start "  ","
.BI "unsigned int nr "  ","
.BI "void *data "  ","
.BI "struct gen_pool *pool "  ","
.BI "unsigned long start_addr "  ");"
.SH ARGUMENTS
.IP "map" 12
The address to base the search on
.IP "size" 12
The bitmap size in bits
.IP "start" 12
The bitnumber to start searching at
.IP "nr" 12
The number of zeroed bits we're looking for
.IP "data" 12
additional data - unused
.IP "pool" 12
pool to find the fit region memory from
.IP "start_addr" 12
-- undescribed --
.SH "DESCRIPTION"
Iterate over the bitmap to find the smallest free region
which we can allocate the memory.
