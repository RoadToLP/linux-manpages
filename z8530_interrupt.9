.TH "z8530_interrupt" 9 "z8530_interrupt" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
z8530_interrupt \- Handle an interrupt from a Z8530
.SH SYNOPSIS
.B "irqreturn_t" z8530_interrupt
.BI "(int irq "  ","
.BI "void *dev_id "  ");"
.SH ARGUMENTS
.IP "irq" 12
Interrupt number
.IP "dev_id" 12
The Z8530 device that is interrupting.

A Z85[2]30 device has stuck its hand in the air for attention.
We scan both the channels on the chip for events and then call
the channel specific call backs for each channel that has events.
We have to use callback functions because the two channels can be
in different modes.

Locking is done for the handlers. Note that locking is done
at the chip level (the 5uS delay issue is per chip not per
channel). c->lock for both channels points to dev->lock
