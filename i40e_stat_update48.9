.TH "i40e_stat_update48" 9 "i40e_stat_update48" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
i40e_stat_update48 \- read and update a 48 bit stat from the chip
.SH SYNOPSIS
.B "void" i40e_stat_update48
.BI "(struct i40e_hw *hw "  ","
.BI "u32 hireg "  ","
.BI "u32 loreg "  ","
.BI "bool offset_loaded "  ","
.BI "u64 *offset "  ","
.BI "u64 *stat "  ");"
.SH ARGUMENTS
.IP "hw" 12
ptr to the hardware info
.IP "hireg" 12
the high 32 bit reg to read
.IP "loreg" 12
the low 32 bit reg to read
.IP "offset_loaded" 12
has the initial offset been loaded yet
.IP "offset" 12
ptr to current offset value
.IP "stat" 12
ptr to the stat
.SH "DESCRIPTION"
Since the device stats are not reset at PFReset, they likely will not
be zeroed when the driver starts.  We'll save the first values read
and use them as offsets to be subtracted from the raw values in order
to report stats that count from zero.  In the process, we also manage
the potential roll-over.
