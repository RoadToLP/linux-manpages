.TH "integrity_kernel_module_request" 9 "integrity_kernel_module_request" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
integrity_kernel_module_request \- prevent crypto-pkcs1pad(rsa,*) requests
.SH SYNOPSIS
.B "int" integrity_kernel_module_request
.BI "(char *kmod_name "  ");"
.SH ARGUMENTS
.IP "kmod_name" 12
kernel module name
.SH "DESCRIPTION"
We have situation, when \fBpublic_key_verify_signature\fP in case of RSA
algorithm use alg_name to store internal information in order to
construct an algorithm on the fly, but \fBcrypto_larval_lookup\fP will try
to use alg_name in order to load kernel module with same name.
Since we don't have any real "crypto-pkcs1pad(rsa,*)" kernel modules,
we are safe to fail such module request from \fBcrypto_larval_lookup\fP.

In this way we prevent modprobe execution during digsig verification
and avoid possible deadlock if modprobe and/or it's dependencies
also signed with digsig.
