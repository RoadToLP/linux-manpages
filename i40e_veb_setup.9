.TH "i40e_veb_setup" 9 "i40e_veb_setup" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
i40e_veb_setup \- Set up a VEB
.SH SYNOPSIS
.B "struct i40e_veb *" i40e_veb_setup
.BI "(struct i40e_pf *pf "  ","
.BI "u16 flags "  ","
.BI "u16 uplink_seid "  ","
.BI "u16 vsi_seid "  ","
.BI "u8 enabled_tc "  ");"
.SH ARGUMENTS
.IP "pf" 12
board private structure
.IP "flags" 12
VEB setup flags
.IP "uplink_seid" 12
the switch element to link to
.IP "vsi_seid" 12
the initial VSI seid
.IP "enabled_tc" 12
Enabled TC bit-map
.SH "DESCRIPTION"
This allocates the sw VEB structure and links it into the switch
It is possible and legal for this to be a duplicate of an already
existing VEB.  It is also possible for both uplink and vsi seids
to be zero, in order to create a floating VEB.

Returns pointer to the successfully allocated VEB sw struct on
success, otherwise returns NULL on failure.
