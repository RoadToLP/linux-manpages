.TH "xprt_adjust_cwnd" 9 "xprt_adjust_cwnd" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
xprt_adjust_cwnd \- adjust transport congestion window
.SH SYNOPSIS
.B "void" xprt_adjust_cwnd
.BI "(struct rpc_xprt *xprt "  ","
.BI "struct rpc_task *task "  ","
.BI "int result "  ");"
.SH ARGUMENTS
.IP "xprt" 12
pointer to xprt
.IP "task" 12
recently completed RPC request used to adjust window
.IP "result" 12
result code of completed RPC request
.SH "DESCRIPTION"
The transport code maintains an estimate on the maximum number of out-
standing RPC requests, using a smoothed version of the congestion
avoidance implemented in 44BSD. This is basically the Van Jacobson
congestion algorithm: If a retransmit occurs, the congestion window is
halved; otherwise, it is incremented by 1/cwnd when

-       a reply is received and
-       a full number of requests are outstanding and
-       the congestion window hasn't been updated recently.
