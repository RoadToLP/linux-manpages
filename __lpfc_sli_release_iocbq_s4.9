.TH "__lpfc_sli_release_iocbq_s4" 9 "__lpfc_sli_release_iocbq_s4" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
__lpfc_sli_release_iocbq_s4 \- Release iocb to the iocb pool
.SH SYNOPSIS
.B "void" __lpfc_sli_release_iocbq_s4
.BI "(struct lpfc_hba *phba "  ","
.BI "struct lpfc_iocbq *iocbq "  ");"
.SH ARGUMENTS
.IP "phba" 12
Pointer to HBA context object.
.IP "iocbq" 12
Pointer to driver iocb object.
.SH "DESCRIPTION"
This function is called to release the driver iocb object
to the iocb pool. The iotag in the iocb object
does not change for each use of the iocb object. This function
clears all other fields of the iocb object when it is freed.
The sqlq structure that holds the xritag and phys and virtual
mappings for the scatter gather list is retrieved from the
active array of sglq. The get of the sglq pointer also clears
the entry in the array. If the status of the IO indiactes that
this IO was aborted then the sglq entry it put on the
lpfc_abts_els_sgl_list until the CQ_ABORTED_XRI is received. If the
IO has good status or fails for any other reason then the sglq
entry is added to the free list (lpfc_els_sgl_list). The hbalock is
asserted held in the code path calling this routine.
