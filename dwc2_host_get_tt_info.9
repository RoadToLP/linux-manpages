.TH "dwc2_host_get_tt_info" 9 "dwc2_host_get_tt_info" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
dwc2_host_get_tt_info \- Get the dwc2_tt associated with context
.SH SYNOPSIS
.B "struct dwc2_tt *" dwc2_host_get_tt_info
.BI "(struct dwc2_hsotg *hsotg "  ","
.BI "void *context "  ","
.BI "gfp_t mem_flags "  ","
.BI "int *ttport "  ");"
.SH ARGUMENTS
.IP "hsotg" 12
The HCD state structure for the DWC OTG controller.
.IP "context" 12
The priv pointer from a struct dwc2_hcd_urb.
.IP "mem_flags" 12
Flags for allocating memory.
.IP "ttport" 12
We'll return this device's port number here.  That's used to
reference into the bitmap if we're on a multi_tt hub.
.SH "DESCRIPTION"

This will get the dwc2_tt structure (and ttport) associated with the given
context (which is really just a struct urb pointer).

The first time this is called for a given TT we allocate memory for our
structure.  When everyone is done and has called \fBdwc2_host_put_tt_info\fP
then the refcount for the structure will go to 0 and we'll free it.
.SH "RETURN"
a pointer to a struct dwc2_tt.  Don't forget to call
\fBdwc2_host_put_tt_info\fP!  Returns NULL upon memory alloc failure.
