.TH "synth_event_add_next_val" 9 "synth_event_add_next_val" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
synth_event_add_next_val \- Add the next field's value to an open synth trace
.SH SYNOPSIS
.B "int" synth_event_add_next_val
.BI "(u64 val "  ","
.BI "struct synth_event_trace_state *trace_state "  ");"
.SH ARGUMENTS
.IP "val" 12
The value to set the next field to
.IP "trace_state" 12
A pointer to object tracking the piecewise trace state
.SH "DESCRIPTION"
Set the value of the next field in an event that's been opened by
\fBsynth_event_trace_start\fP.

The val param should be the value cast to u64.  If the value points
to a string, the val param should be a char * cast to u64.

This function assumes all the fields in an event are to be set one
after another - successive calls to this function are made, one for
each field, in the order of the fields in the event, until all
fields have been set.  If you'd rather set each field individually
without regard to ordering, \fBsynth_event_add_val\fP can be used
instead.

Note however that \fBsynth_event_add_next_val\fP and
\fBsynth_event_add_val\fP can't be intermixed for a given event trace -
one or the other but not both can be used at the same time.

Note also that \fBsynth_event_trace_end\fP must be called after all
values have been added for each event trace, regardless of whether
adding all field values succeeded or not.
.SH "RETURN"
0 on success, err otherwise.
