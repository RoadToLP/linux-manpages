.TH "splice_from_pipe_feed" 9 "splice_from_pipe_feed" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
splice_from_pipe_feed \- feed available data from a pipe to a file
.SH SYNOPSIS
.B "int" splice_from_pipe_feed
.BI "(struct pipe_inode_info *pipe "  ","
.BI "struct splice_desc *sd "  ","
.BI "splice_actor *actor "  ");"
.SH ARGUMENTS
.IP "pipe" 12
pipe to splice from
.IP "sd" 12
information to \fIactor\fP
.IP "actor" 12
handler that splices the data
.SH "DESCRIPTION"
This function loops over the pipe and calls \fIactor\fP to do the
actual moving of a single struct pipe_buffer to the desired
destination.  It returns when there's no more buffers left in
the pipe or if the requested number of bytes (\fIsd->total_len\fP)
have been copied.  It returns a positive number (one) if the
pipe needs to be filled with more data, zero if the required
number of bytes have been copied and -errno on error.

This, together with splice_from_pipe_{begin,end,next}, may be
used to implement the functionality of \fB__splice_from_pipe\fP when
locking is required around copying the pipe buffers to the
destination.
