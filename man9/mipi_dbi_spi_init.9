.TH "mipi_dbi_spi_init" 9 "mipi_dbi_spi_init" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
mipi_dbi_spi_init \- Initialize MIPI DBI SPI interface
.SH SYNOPSIS
.B "int" mipi_dbi_spi_init
.BI "(struct spi_device *spi "  ","
.BI "struct mipi_dbi *dbi "  ","
.BI "struct gpio_desc *dc "  ");"
.SH ARGUMENTS
.IP "spi" 12
SPI device
.IP "dbi" 12
MIPI DBI structure to initialize
.IP "dc" 12
D/C gpio (optional)
.SH "DESCRIPTION"
This function sets \fImipi_dbi->command\fP, enables \fImipi_dbi->read_commands\fP for the
usual read commands. It should be followed by a call to \fBmipi_dbi_dev_init\fP or
a driver-specific init.

If \fIdc\fP is set, a Type C Option 3 interface is assumed, if not
Type C Option 1.

If the SPI master driver doesn't support the necessary bits per word,
the following transformation is used:

- 9-bit: reorder buffer as 9x 8-bit words, padded with no-op command.
- 16-bit: if big endian send as 8-bit, if little endian swap bytes
.SH "RETURN"
Zero on success, negative error code on failure.
