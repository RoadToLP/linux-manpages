.TH "pin_user_pages" 9 "pin_user_pages" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
pin_user_pages \- pin user pages in memory for use by other devices
.SH SYNOPSIS
.B "long" pin_user_pages
.BI "(unsigned long start "  ","
.BI "unsigned long nr_pages "  ","
.BI "unsigned int gup_flags "  ","
.BI "struct page **pages "  ","
.BI "struct vm_area_struct **vmas "  ");"
.SH ARGUMENTS
.IP "start" 12
starting user address
.IP "nr_pages" 12
number of pages from start to pin
.IP "gup_flags" 12
flags modifying lookup behaviour
.IP "pages" 12
array that receives pointers to the pages pinned.
Should be at least nr_pages long. Or NULL, if caller
only intends to ensure the pages are faulted in.
.IP "vmas" 12
array of pointers to vmas corresponding to each page.
Or NULL if the caller does not require them.
.SH "DESCRIPTION"
Nearly the same as \fBget_user_pages\fP, except that FOLL_TOUCH is not set, and
FOLL_PIN is set.

FOLL_PIN means that the pages must be released via \fBunpin_user_page\fP. Please
see Documentation/core-api/pin_user_pages.rst for details.
