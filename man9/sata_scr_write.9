.TH "sata_scr_write" 9 "sata_scr_write" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
sata_scr_write \- write SCR register of the specified port
.SH SYNOPSIS
.B "int" sata_scr_write
.BI "(struct ata_link *link "  ","
.BI "int reg "  ","
.BI "u32 val "  ");"
.SH ARGUMENTS
.IP "link" 12
ATA link to write SCR for
.IP "reg" 12
SCR to write
.IP "val" 12
value to write

Write \fIval\fP to SCR register \fIreg\fP of \fIlink\fP.  This function is
guaranteed to succeed if \fIlink\fP is ap->link, the cable type of
the port is SATA and the port implements ->scr_read.

LOCKING:
None if \fIlink\fP is ap->link.  Kernel thread context otherwise.
.SH "RETURN"
0 on success, negative errno on failure.
