.TH "thermal_zone_of_sensor_register" 9 "thermal_zone_of_sensor_register" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
thermal_zone_of_sensor_register \- registers a sensor to a DT thermal zone
.SH SYNOPSIS
.B "struct thermal_zone_device *" thermal_zone_of_sensor_register
.BI "(struct device *dev "  ","
.BI "int sensor_id "  ","
.BI "void *data "  ","
.BI "const struct thermal_zone_of_device_ops *ops "  ");"
.SH ARGUMENTS
.IP "dev" 12
a valid struct device pointer of a sensor device. Must contain
a valid .of_node, for the sensor node.
.IP "sensor_id" 12
a sensor identifier, in case the sensor IP has more
than one sensors
.IP "data" 12
a private pointer (owned by the caller) that will be passed
back, when a temperature reading is needed.
.IP "ops" 12
struct thermal_zone_of_device_ops *. Must contain at least .get_temp.
.SH "DESCRIPTION"
This function will search the list of thermal zones described in device
tree and look for the zone that refer to the sensor device pointed by
\fIdev->of_node\fP as temperature providers. For the zone pointing to the
sensor node, the sensor will be added to the DT thermal zone device.

The thermal zone temperature is provided by the \fIget_temp\fP function
pointer. When called, it will have the private pointer \fIdata\fP back.

The thermal zone temperature trend is provided by the \fIget_trend\fP function
pointer. When called, it will have the private pointer \fIdata\fP back.

TODO:
01 - This function must enqueue the new sensor instead of using
it as the only source of temperature values.

02 - There must be a way to match the sensor with all thermal zones
that refer to it.
.SH "RETURN"
On success returns a valid struct thermal_zone_device,
otherwise, it returns a corresponding \fBERR_PTR\fP. Caller must
check the return value with help of \fBIS_ERR\fP helper.
