.TH "debugfs_create_symlink" 9 "debugfs_create_symlink" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
debugfs_create_symlink \- create a symbolic link in the debugfs filesystem
.SH SYNOPSIS
.B "struct dentry *" debugfs_create_symlink
.BI "(const char *name "  ","
.BI "struct dentry *parent "  ","
.BI "const char *target "  ");"
.SH ARGUMENTS
.IP "name" 12
a pointer to a string containing the name of the symbolic link to
create.
.IP "parent" 12
a pointer to the parent dentry for this symbolic link.  This
should be a directory dentry if set.  If this parameter is NULL,
then the symbolic link will be created in the root of the debugfs
filesystem.
.IP "target" 12
a pointer to a string containing the path to the target of the
symbolic link.
.SH "DESCRIPTION"
This function creates a symbolic link with the given name in debugfs that
links to the given target path.

This function will return a pointer to a dentry if it succeeds.  This
pointer must be passed to the \fBdebugfs_remove\fP function when the symbolic
link is to be removed (no automatic cleanup happens if your module is
unloaded, you are responsible here.)  If an error occurs, ERR_PTR(-ERROR)
will be returned.

If debugfs is not enabled in the kernel, the value -ENODEV will be
returned.
