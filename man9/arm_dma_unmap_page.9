.TH "arm_dma_unmap_page" 9 "arm_dma_unmap_page" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
arm_dma_unmap_page \- unmap a buffer previously mapped through dma_map_page()
.SH SYNOPSIS
.B "void" arm_dma_unmap_page
.BI "(struct device *dev "  ","
.BI "dma_addr_t handle "  ","
.BI "size_t size "  ","
.BI "enum dma_data_direction dir "  ","
.BI "unsigned long attrs "  ");"
.SH ARGUMENTS
.IP "dev" 12
valid struct device pointer, or NULL for ISA and EISA-like devices
.IP "handle" 12
DMA address of buffer
.IP "size" 12
size of buffer (same as passed to dma_map_page)
.IP "dir" 12
DMA transfer direction (same as passed to dma_map_page)
.IP "attrs" 12
-- undescribed --
.SH "DESCRIPTION"
Unmap a page streaming mode DMA translation.  The handle and size
must match what was provided in the previous \fBdma_map_page\fP call.
All other usages are undefined.

After this call, reads by the CPU to the buffer are guaranteed to see
whatever the device wrote there.
