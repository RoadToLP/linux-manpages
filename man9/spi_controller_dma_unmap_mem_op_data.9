.TH "spi_controller_dma_unmap_mem_op_data" 9 "spi_controller_dma_unmap_mem_op_data" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
spi_controller_dma_unmap_mem_op_data \- DMA-unmap the buffer attached to a memory operation
.SH SYNOPSIS
.B "void" spi_controller_dma_unmap_mem_op_data
.BI "(struct spi_controller *ctlr "  ","
.BI "const struct spi_mem_op *op "  ","
.BI "struct sg_table *sgt "  ");"
.SH ARGUMENTS
.IP "ctlr" 12
the SPI controller requesting this \fBdma_unmap\fP
.IP "op" 12
the memory operation containing the buffer to unmap
.IP "sgt" 12
a pointer to an sg_table previously initialized by
\fBspi_controller_dma_map_mem_op_data\fP
.SH "DESCRIPTION"
Some controllers might want to do DMA on the data buffer embedded in \fIop\fP.
This helper prepares things so that the CPU can access the
op->data.buf.{in,out} buffer again.

This function is not intended to be called from SPI drivers. Only SPI
controller drivers should use it.

This function should be called after the DMA operation has finished and is
only valid if the previous \fBspi_controller_dma_map_mem_op_data\fP call
returned 0.
.SH "RETURN"
0 in case of success, a negative error code otherwise.
