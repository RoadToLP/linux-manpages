.TH "usb_reset_device" 9 "usb_reset_device" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
usb_reset_device \- warn interface drivers and perform a USB port reset
.SH SYNOPSIS
.B "int" usb_reset_device
.BI "(struct usb_device *udev "  ");"
.SH ARGUMENTS
.IP "udev" 12
device to reset (not in NOTATTACHED state)
.SH "DESCRIPTION"
Warns all drivers bound to registered interfaces (using their pre_reset
method), performs the port reset, and then lets the drivers know that
the reset is over (using their post_reset method).

If an interface is currently being probed or disconnected, we assume
its driver knows how to handle resets.  For all other interfaces,
if the driver doesn't have pre_reset and post_reset methods then
we attempt to unbind it and rebind afterward.
.SH "RETURN"
The same as for \fBusb_reset_and_verify_device\fP.
.SH "NOTE"
The caller must own the device lock.  For example, it's safe to use
this from a driver \fBprobe\fP routine after downloading new firmware.
For calls that might not occur during \fBprobe\fP, drivers should lock
the device using \fBusb_lock_device_for_reset\fP.
