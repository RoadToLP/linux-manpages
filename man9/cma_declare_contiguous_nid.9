.TH "cma_declare_contiguous_nid" 9 "cma_declare_contiguous_nid" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
cma_declare_contiguous_nid \- reserve custom contiguous area
.SH SYNOPSIS
.B "int" cma_declare_contiguous_nid
.BI "(phys_addr_t base "  ","
.BI "phys_addr_t size "  ","
.BI "phys_addr_t limit "  ","
.BI "phys_addr_t alignment "  ","
.BI "unsigned int order_per_bit "  ","
.BI "bool fixed "  ","
.BI "const char *name "  ","
.BI "struct cma **res_cma "  ","
.BI "int nid "  ");"
.SH ARGUMENTS
.IP "base" 12
Base address of the reserved area optional, use 0 for any
.IP "size" 12
Size of the reserved area (in bytes),
.IP "limit" 12
End address of the reserved memory (optional, 0 for any).
.IP "alignment" 12
Alignment for the CMA area, should be power of 2 or zero
.IP "order_per_bit" 12
Order of pages represented by one bit on bitmap.
.IP "fixed" 12
hint about where to place the reserved area
.IP "name" 12
The name of the area. See function \fBcma_init_reserved_mem\fP
.IP "res_cma" 12
Pointer to store the created cma region.
.IP "nid" 12
nid of the free area to find, NUMA_NO_NODE for any node
.SH "DESCRIPTION"
This function reserves memory from early allocator. It should be
called by arch specific code once the early allocator (memblock or bootmem)
has been activated and all other subsystems have already allocated/reserved
memory. This function allows to create custom reserved areas.

If \fIfixed\fP is true, reserve contiguous area at exactly \fIbase\fP.  If false,
reserve in range from \fIbase\fP to \fIlimit\fP.
