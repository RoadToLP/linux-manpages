.TH "try_write_vid_and_data" 9 "try_write_vid_and_data" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
try_write_vid_and_data \- try to write VID header and data to a new PEB.
.SH SYNOPSIS
.B "int" try_write_vid_and_data
.BI "(struct ubi_volume *vol "  ","
.BI "int lnum "  ","
.BI "struct ubi_vid_io_buf *vidb "  ","
.BI "const void *buf "  ","
.BI "int offset "  ","
.BI "int len "  ");"
.SH ARGUMENTS
.IP "vol" 12
volume description object
.IP "lnum" 12
logical eraseblock number
.IP "vidb" 12
the VID buffer to write
.IP "buf" 12
buffer containing the data
.IP "offset" 12
where to start writing data
.IP "len" 12
how many bytes should be written
.SH "DESCRIPTION"
This function tries to write VID header and data belonging to logical
eraseblock \fIlnum\fP of volume \fIvol\fP to a new physical eraseblock. Returns zero
in case of success and a negative error code in case of failure.
In case of error, it is possible that something was still written to the
flash media, but may be some garbage.
