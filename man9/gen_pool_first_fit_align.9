.TH "gen_pool_first_fit_align" 9 "gen_pool_first_fit_align" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
gen_pool_first_fit_align \- find the first available region of memory matching the size requirement (alignment constraint)
.SH SYNOPSIS
.B "unsigned long" gen_pool_first_fit_align
.BI "(unsigned long *map "  ","
.BI "unsigned long size "  ","
.BI "unsigned long start "  ","
.BI "unsigned int nr "  ","
.BI "void *data "  ","
.BI "struct gen_pool *pool "  ","
.BI "unsigned long start_addr "  ");"
.SH ARGUMENTS
.IP "map" 12
The address to base the search on
.IP "size" 12
The bitmap size in bits
.IP "start" 12
The bitnumber to start searching at
.IP "nr" 12
The number of zeroed bits we're looking for
.IP "data" 12
data for alignment
.IP "pool" 12
pool to get order from
.IP "start_addr" 12
-- undescribed --
