.TH "w1_reset_resume_command" 9 "w1_reset_resume_command" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
w1_reset_resume_command \- resume instead of another match ROM
.SH SYNOPSIS
.B "int" w1_reset_resume_command
.BI "(struct w1_master *dev "  ");"
.SH ARGUMENTS
.IP "dev" 12
the master device
.SH "DESCRIPTION"
When the workflow with a slave amongst many requires several
successive commands a reset between each, this function is similar
to doing a reset then a match ROM for the last matched ROM. The
advantage being that the matched ROM step is skipped in favor of the
resume command. The slave must support the command of course.

If the bus has only one slave, traditionnaly the match ROM is skipped
and a "SKIP ROM" is done for efficiency. On multi-slave busses, this
doesn't work of course, but the resume command is the next best thing.

The w1 master lock must be held.
