.TH "requeue_pi_wake_futex" 9 "requeue_pi_wake_futex" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
requeue_pi_wake_futex \- Wake a task that acquired the lock during requeue
.SH SYNOPSIS
.B "void" requeue_pi_wake_futex
.BI "(struct futex_q *q "  ","
.BI "union futex_key *key "  ","
.BI "struct futex_hash_bucket *hb "  ");"
.SH ARGUMENTS
.IP "q" 12
the futex_q
.IP "key" 12
the key of the requeue target futex
.IP "hb" 12
the hash_bucket of the requeue target futex
.SH "DESCRIPTION"
During futex_requeue, with requeue_pi=1, it is possible to acquire the
target futex if it is uncontended or via a lock steal.  Set the futex_q key
to the requeue target futex so the waiter can detect the wakeup on the right
futex, but remove it from the hb and NULL the rt_waiter so it can detect
atomic lock acquisition.  Set the q->lock_ptr to the requeue target hb->lock
to protect access to the pi_state to fixup the owner later.  Must be called
with both q->lock_ptr and hb->lock held.
