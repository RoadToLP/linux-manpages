.TH "shrink_dpa_allocation" 9 "shrink_dpa_allocation" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
shrink_dpa_allocation \- for each dimm in region free n bytes for label_id
.SH SYNOPSIS
.B "int" shrink_dpa_allocation
.BI "(struct nd_region *nd_region "  ","
.BI "struct nd_label_id *label_id "  ","
.BI "resource_size_t n "  ");"
.SH ARGUMENTS
.IP "nd_region" 12
the set of dimms to reclaim \fIn\fP bytes from
.IP "label_id" 12
unique identifier for the namespace consuming this dpa range
.IP "n" 12
number of bytes per-dimm to release
.SH "DESCRIPTION"
Assumes resources are ordered.  Starting from the end try to
\fBadjust_resource\fP the allocation to \fIn\fP, but if \fIn\fP is larger than the
allocation delete it and find the 'new' last allocation in the label
set.
