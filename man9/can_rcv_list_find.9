.TH "can_rcv_list_find" 9 "can_rcv_list_find" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
can_rcv_list_find \- determine optimal filterlist inside device filter struct
.SH SYNOPSIS
.B "struct hlist_head *" can_rcv_list_find
.BI "(canid_t *can_id "  ","
.BI "canid_t *mask "  ","
.BI "struct can_dev_rcv_lists *dev_rcv_lists "  ");"
.SH ARGUMENTS
.IP "can_id" 12
pointer to CAN identifier of a given can_filter
.IP "mask" 12
pointer to CAN mask of a given can_filter
.IP "dev_rcv_lists" 12
pointer to the device filter struct
.SH "DESCRIPTION"
Returns the optimal filterlist to reduce the filter handling in the
receive path. This function is called by service functions that need
to register or unregister a can_filter in the filter lists.

A filter matches in general, when

<received_can_id> & mask == can_id & mask

so every bit set in the mask (even CAN_EFF_FLAG, CAN_RTR_FLAG) describe
relevant bits for the filter.

The filter can be inverted (CAN_INV_FILTER bit set in can_id) or it can
filter for error messages (CAN_ERR_FLAG bit set in mask). For error msg
frames there is a special filterlist and a special rx path filter handling.
.SH "RETURN"
Pointer to optimal filterlist for the given can_id/mask pair.
Consistency checked mask.
Reduced can_id to have a preprocessed filter compare value.
