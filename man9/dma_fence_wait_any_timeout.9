.TH "dma_fence_wait_any_timeout" 9 "dma_fence_wait_any_timeout" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
dma_fence_wait_any_timeout \- sleep until any fence gets signaled or until timeout elapses
.SH SYNOPSIS
.B "signed long" dma_fence_wait_any_timeout
.BI "(struct dma_fence **fences "  ","
.BI "uint32_t count "  ","
.BI "bool intr "  ","
.BI "signed long timeout "  ","
.BI "uint32_t *idx "  ");"
.SH ARGUMENTS
.IP "fences" 12
array of fences to wait on
.IP "count" 12
number of fences to wait on
.IP "intr" 12
if true, do an interruptible wait
.IP "timeout" 12
timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT
.IP "idx" 12
used to store the first signaled fence index, meaningful only on
positive return
.SH "DESCRIPTION"
Returns -EINVAL on custom fence wait implementation, -ERESTARTSYS if
interrupted, 0 if the wait timed out, or the remaining timeout in jiffies
on success.

Synchronous waits for the first fence in the array to be signaled. The
caller needs to hold a reference to all fences in the array, otherwise a
fence might be freed before return, resulting in undefined behavior.

See also \fBdma_fence_wait\fP and \fBdma_fence_wait_timeout\fP.
