.TH "i40e_correct_mac_vlan_filters" 9 "i40e_correct_mac_vlan_filters" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
i40e_correct_mac_vlan_filters \- Correct non-VLAN filters if necessary
.SH SYNOPSIS
.B "int" i40e_correct_mac_vlan_filters
.BI "(struct i40e_vsi *vsi "  ","
.BI "struct hlist_head *tmp_add_list "  ","
.BI "struct hlist_head *tmp_del_list "  ","
.BI "int vlan_filters "  ");"
.SH ARGUMENTS
.IP "vsi" 12
the VSI to configure
.IP "tmp_add_list" 12
list of filters ready to be added
.IP "tmp_del_list" 12
list of filters ready to be deleted
.IP "vlan_filters" 12
the number of active VLAN filters
.SH "DESCRIPTION"
Update VLAN=0 and VLAN=-1 (I40E_VLAN_ANY) filters properly so that they
behave as expected. If we have any active VLAN filters remaining or about
to be added then we need to update non-VLAN filters to be marked as VLAN=0
so that they only match against untagged traffic. If we no longer have any
active VLAN filters, we need to make all non-VLAN filters marked as VLAN=-1
so that they match against both tagged and untagged traffic. In this way,
we ensure that we correctly receive the desired traffic. This ensures that
when we have an active VLAN we will receive only untagged traffic and
traffic matching active VLANs. If we have no active VLANs then we will
operate in non-VLAN mode and receive all traffic, tagged or untagged.

Finally, in a similar fashion, this function also corrects filters when
there is an active PVID assigned to this VSI.

In case of memory allocation failure return -ENOMEM. Otherwise, return 0.

This function is only expected to be called from within
i40e_sync_vsi_filters.
.SH "NOTE"
This function expects to be called while under the
mac_filter_hash_lock
