.TH "debugfs_create_bool" 9 "debugfs_create_bool" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
debugfs_create_bool \- create a debugfs file that is used to read and write a boolean value
.SH SYNOPSIS
.B "struct dentry *" debugfs_create_bool
.BI "(const char *name "  ","
.BI "umode_t mode "  ","
.BI "struct dentry *parent "  ","
.BI "bool *value "  ");"
.SH ARGUMENTS
.IP "name" 12
a pointer to a string containing the name of the file to create.
.IP "mode" 12
the permission that the file should have
.IP "parent" 12
a pointer to the parent dentry for this file.  This should be a
directory dentry if set.  If this parameter is NULL, then the
file will be created in the root of the debugfs filesystem.
.IP "value" 12
a pointer to the variable that the file should read to and write
from.
.SH "DESCRIPTION"
This function creates a file in debugfs with the given name that
contains the value of the variable \fIvalue\fP.  If the \fImode\fP variable is so
set, it can be read from, and written to.

This function will return a pointer to a dentry if it succeeds.  This
pointer must be passed to the \fBdebugfs_remove\fP function when the file is
to be removed (no automatic cleanup happens if your module is unloaded,
you are responsible here.)  If an error occurs, ERR_PTR(-ERROR) will be
returned.

If debugfs is not enabled in the kernel, the value ERR_PTR(-ENODEV) will
be returned.
