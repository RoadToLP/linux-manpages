.TH "kvm_arch_mmu_enable_log_dirty_pt_masked" 9 "kvm_arch_mmu_enable_log_dirty_pt_masked" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
kvm_arch_mmu_enable_log_dirty_pt_masked \- enable dirty logging for selected PT level pages.
.SH SYNOPSIS
.B "void" kvm_arch_mmu_enable_log_dirty_pt_masked
.BI "(struct kvm *kvm "  ","
.BI "struct kvm_memory_slot *slot "  ","
.BI "gfn_t gfn_offset "  ","
.BI "unsigned long mask "  ");"
.SH ARGUMENTS
.IP "kvm" 12
-- undescribed --
.IP "slot" 12
-- undescribed --
.IP "gfn_offset" 12
-- undescribed --
.IP "mask" 12
-- undescribed --
.SH "DESCRIPTION"

It calls kvm_mmu_write_protect_pt_masked to write protect selected pages to
enable dirty logging for them.

Used when we do not need to care about huge page mappings: e.g. during dirty
logging we do not have any such mappings.
