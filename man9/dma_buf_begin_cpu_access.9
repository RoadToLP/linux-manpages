.TH "dma_buf_begin_cpu_access" 9 "dma_buf_begin_cpu_access" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
dma_buf_begin_cpu_access \- Must be called before accessing a dma_buf from the cpu in the kernel context. Calls begin_cpu_access to allow exporter-specific preparations. Coherency is only guaranteed in the specified range for the specified access direction.
.SH SYNOPSIS
.B "int" dma_buf_begin_cpu_access
.BI "(struct dma_buf *dmabuf "  ","
.BI "enum dma_data_direction direction "  ");"
.SH ARGUMENTS
.IP "dmabuf" 12
[in]    buffer to prepare cpu access for.
.IP "direction" 12
[in]    length of range for cpu access.
.SH "DESCRIPTION"
After the cpu access is complete the caller should call
\fBdma_buf_end_cpu_access\fP. Only when cpu access is braketed by both calls is
it guaranteed to be coherent with other DMA access.

This function will also wait for any DMA transactions tracked through
implicit synchronization in \fIdma_buf.resv\fP. For DMA transactions with explicit
synchronization this function will only ensure cache coherency, callers must
ensure synchronization with such DMA transactions on their own.

Can return negative error values, returns 0 on success.
