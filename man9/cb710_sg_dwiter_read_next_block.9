.TH "cb710_sg_dwiter_read_next_block" 9 "cb710_sg_dwiter_read_next_block" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
cb710_sg_dwiter_read_next_block \- get next 32-bit word from sg buffer
.SH SYNOPSIS
.B "uint32_t" cb710_sg_dwiter_read_next_block
.BI "(struct sg_mapping_iter *miter "  ");"
.SH ARGUMENTS
.IP "miter" 12
sg mapping iterator used for reading
.SH "DESCRIPTION"
Returns 32-bit word starting at byte pointed to by \fImiter\fP\fI\fP
handling any alignment issues.  Bytes past the buffer's end
are not accessed (read) but are returned as zeroes.  \fImiter\fP\fI\fP
is advanced by 4 bytes or to the end of buffer whichever is
closer.
.SH "CONTEXT"
Same requirements as in \fBsg_miter_next\fP.
.SH "RETURN"
32-bit word just read.
