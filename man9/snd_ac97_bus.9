.TH "snd_ac97_bus" 9 "snd_ac97_bus" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
snd_ac97_bus \- create an AC97 bus component
.SH SYNOPSIS
.B "int" snd_ac97_bus
.BI "(struct snd_card *card "  ","
.BI "int num "  ","
.BI "const struct snd_ac97_bus_ops *ops "  ","
.BI "void *private_data "  ","
.BI "struct snd_ac97_bus **rbus "  ");"
.SH ARGUMENTS
.IP "card" 12
the card instance
.IP "num" 12
the bus number
.IP "ops" 12
the bus callbacks table
.IP "private_data" 12
private data pointer for the new instance
.IP "rbus" 12
the pointer to store the new AC97 bus instance.
.SH "DESCRIPTION"
Creates an AC97 bus component.  An struct snd_ac97_bus instance is newly
allocated and initialized.

The ops table must include valid callbacks (at least read and
write).  The other callbacks, wait and reset, are not mandatory.

The clock is set to 48000.  If another clock is needed, set
``(*rbus)->clock`` manually.

The AC97 bus instance is registered as a low-level device, so you don't
have to release it manually.
.SH "RETURN"
Zero if successful, or a negative error code on failure.
