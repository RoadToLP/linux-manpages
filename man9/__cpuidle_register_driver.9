.TH "__cpuidle_register_driver" 9 "__cpuidle_register_driver" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
__cpuidle_register_driver \- register the driver
.SH SYNOPSIS
.B "int" __cpuidle_register_driver
.BI "(struct cpuidle_driver *drv "  ");"
.SH ARGUMENTS
.IP "drv" 12
a valid pointer to a struct cpuidle_driver
.SH "DESCRIPTION"
Do some sanity checks, initialize the driver, assign the driver to the
global cpuidle driver variable(s) and set up the broadcast timer if the
cpuidle driver has some states that shut down the local timer.

Returns 0 on success, a negative error code otherwise:
* -EINVAL if the driver pointer is NULL or no idle states are available
* -ENODEV if the cpuidle framework is disabled
* -EBUSY if the driver is already assigned to the global variable(s)
