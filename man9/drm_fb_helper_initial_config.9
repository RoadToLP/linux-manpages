.TH "drm_fb_helper_initial_config" 9 "drm_fb_helper_initial_config" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
drm_fb_helper_initial_config \- setup a sane initial connector configuration
.SH SYNOPSIS
.B "int" drm_fb_helper_initial_config
.BI "(struct drm_fb_helper *fb_helper "  ","
.BI "int bpp_sel "  ");"
.SH ARGUMENTS
.IP "fb_helper" 12
fb_helper device struct
.IP "bpp_sel" 12
bpp value to use for the framebuffer configuration
.SH "DESCRIPTION"
Scans the CRTCs and connectors and tries to put together an initial setup.
At the moment, this is a cloned configuration across all heads with
a new framebuffer object as the backing store.

Note that this also registers the fbdev and so allows userspace to call into
the driver through the fbdev interfaces.

This function will call down into the \fIdrm_fb_helper_funcs.fb_probe\fP callback
to let the driver allocate and initialize the fbdev info structure and the
drm framebuffer used to back the fbdev. \fBdrm_fb_helper_fill_info\fP is provided
as a helper to setup simple default values for the fbdev info structure.

HANG DEBUGGING:

When you have fbcon support built-in or already loaded, this function will do
a full modeset to setup the fbdev console. Due to locking misdesign in the
VT/fbdev subsystem that entire modeset sequence has to be done while holding
console_lock. Until console_unlock is called no dmesg lines will be sent out
to consoles, not even serial console. This means when your driver crashes,
you will see absolutely nothing else but a system stuck in this function,
with no further output. Any kind of \fBprintk\fP you place within your own driver
or in the drm core modeset code will also never show up.

Standard debug practice is to run the fbcon setup without taking the
console_lock as a hack, to be able to see backtraces and crashes on the
serial line. This can be done by setting the fb.lockless_register_fb=1 kernel
cmdline option.

The other option is to just disable fbdev emulation since very likely the
first modeset from userspace will crash in the same way, and is even easier
to debug. This can be done by setting the drm_kms_helper.fbdev_emulation=0
kernel cmdline option.
.SH "RETURN"
Zero if everything went ok, nonzero otherwise.
