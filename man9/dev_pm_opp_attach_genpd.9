.TH "dev_pm_opp_attach_genpd" 9 "dev_pm_opp_attach_genpd" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
dev_pm_opp_attach_genpd \- Attach genpd(s) for the device and save virtual device pointer
.SH SYNOPSIS
.B "struct opp_table *" dev_pm_opp_attach_genpd
.BI "(struct device *dev "  ","
.BI "const char **names "  ","
.BI "struct device ***virt_devs "  ");"
.SH ARGUMENTS
.IP "dev" 12
Consumer device for which the genpd is getting attached.
.IP "names" 12
Null terminated array of pointers containing names of genpd to attach.
.IP "virt_devs" 12
Pointer to return the array of virtual devices.
.SH "DESCRIPTION"
Multiple generic power domains for a device are supported with the help of
virtual genpd devices, which are created for each consumer device - genpd
pair. These are the device structures which are attached to the power domain
and are required by the OPP core to set the performance state of the genpd.
The same API also works for the case where single genpd is available and so
we don't need to support that separately.

This helper will normally be called by the consumer driver of the device
"dev", as only that has details of the genpd names.

This helper needs to be called once with a list of all genpd to attach.
Otherwise the original device structure will be used instead by the OPP core.

The order of entries in the names array must match the order in which
"required-opps" are added in DT.
