.TH "sg_scsi_ioctl" 9 "sg_scsi_ioctl" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
sg_scsi_ioctl \- - handle deprecated SCSI_IOCTL_SEND_COMMAND ioctl
.SH SYNOPSIS
.B "int" sg_scsi_ioctl
.BI "(struct request_queue *q "  ","
.BI "struct gendisk *disk "  ","
.BI "fmode_t mode "  ","
.BI "struct scsi_ioctl_command __user *sic "  ");"
.SH ARGUMENTS
.IP "q" 12
request queue to send scsi commands down
.IP "disk" 12
gendisk to operate on (option)
.IP "mode" 12
mode used to open the file through which the ioctl has been
submitted
.IP "sic" 12
userspace structure describing the command to perform
.SH "DESCRIPTION"
Send down the scsi command described by \fIsic\fP to the device below
the request queue \fIq\fP.  If \fIfile\fP is non-NULL it's used to perform
fine-grained permission checks that allow users to send down
non-destructive SCSI commands.  If the caller has a struct gendisk
available it should be passed in as \fIdisk\fP to allow the low level
driver to use the information contained in it.  A non-NULL \fIdisk\fP
is only allowed if the caller knows that the low level driver doesn't
need it (e.g. in the scsi subsystem).
.SH "NOTES"
-  This interface is deprecated - users should use the SG_IO
interface instead, as this is a more flexible approach to
performing SCSI commands on a device.
-  The SCSI command length is determined by examining the 1st byte
of the given command. There is no way to override this.
-  Data transfers are limited to PAGE_SIZE
-  The length (x + y) must be at least OMAX_SB_LEN bytes long to
accommodate the sense buffer when an error occurs.
The sense buffer is truncated to OMAX_SB_LEN (16) bytes so that
old code will not be surprised.
-  If a Unix error occurs (e.g. ENOMEM) then the user will receive
a negative return and the Unix error code in 'errno'.
If the SCSI command succeeds then 0 is returned.
Positive numbers returned are the compacted SCSI error codes (4
bytes in one int) where the lowest byte is the SCSI status.
