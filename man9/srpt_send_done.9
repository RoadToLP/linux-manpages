.TH "srpt_send_done" 9 "srpt_send_done" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
srpt_send_done \- send completion callback
.SH SYNOPSIS
.B "void" srpt_send_done
.BI "(struct ib_cq *cq "  ","
.BI "struct ib_wc *wc "  ");"
.SH ARGUMENTS
.IP "cq" 12
Completion queue.
.IP "wc" 12
Work completion.
.SH "NOTE"
Although this has not yet been observed during tests, at least in
theory it is possible that the \fBsrpt_get_send_ioctx\fP call invoked by
\fBsrpt_handle_new_iu\fP fails. This is possible because the req_lim_delta
value in each response is set to one, and it is possible that this response
makes the initiator send a new request before the send completion for that
response has been processed. This could e.g. happen if the call to
\fBsrpt_put_send_iotcx\fP is delayed because of a higher priority interrupt or
if IB retransmission causes generation of the send completion to be
delayed. Incoming information units for which \fBsrpt_get_send_ioctx\fP fails
are queued on cmd_wait_list. The code below processes these delayed
requests one at a time.
