.TH "alloc_contig_range" 9 "alloc_contig_range" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
alloc_contig_range \- - tries to allocate given range of pages
.SH SYNOPSIS
.B "int" alloc_contig_range
.BI "(unsigned long start "  ","
.BI "unsigned long end "  ","
.BI "unsigned migratetype "  ","
.BI "gfp_t gfp_mask "  ");"
.SH ARGUMENTS
.IP "start" 12
start PFN to allocate
.IP "end" 12
one-past-the-last PFN to allocate
.IP "migratetype" 12
migratetype of the underlaying pageblocks (either
#MIGRATE_MOVABLE or #MIGRATE_CMA).  All pageblocks
in range must have the same migratetype and it must
be either of the two.
.IP "gfp_mask" 12
GFP mask to use during compaction
.SH "DESCRIPTION"
The PFN range does not have to be pageblock or MAX_ORDER_NR_PAGES
aligned.  The PFN range must belong to a single zone.

The first thing this routine does is attempt to MIGRATE_ISOLATE all
pageblocks in the range.  Once isolated, the pageblocks should not
be modified by others.
.SH "RETURN"
zero on success or negative error code.  On success all
pages which PFN is in [start, end) are allocated for the caller and
need to be freed with \fBfree_contig_range\fP.
