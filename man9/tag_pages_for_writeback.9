.TH "tag_pages_for_writeback" 9 "tag_pages_for_writeback" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
tag_pages_for_writeback \- tag pages to be written by write_cache_pages
.SH SYNOPSIS
.B "void" tag_pages_for_writeback
.BI "(struct address_space *mapping "  ","
.BI "pgoff_t start "  ","
.BI "pgoff_t end "  ");"
.SH ARGUMENTS
.IP "mapping" 12
address space structure to write
.IP "start" 12
starting page index
.IP "end" 12
ending page index (inclusive)
.SH "DESCRIPTION"
This function scans the page range from \fIstart\fP to \fIend\fP (inclusive) and tags
all pages that have DIRTY tag set with a special TOWRITE tag. The idea is
that write_cache_pages (or whoever calls this function) will then use
TOWRITE tag to identify pages eligible for writeback.  This mechanism is
used to avoid livelocking of writeback by a process steadily creating new
dirty pages in the file (thus it is important for this function to be quick
so that it can tag pages faster than a dirtying process can create them).
