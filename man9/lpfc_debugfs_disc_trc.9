.TH "lpfc_debugfs_disc_trc" 9 "lpfc_debugfs_disc_trc" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
lpfc_debugfs_disc_trc \- Store discovery trace log
.SH SYNOPSIS
.B "void" lpfc_debugfs_disc_trc
.BI "(struct lpfc_vport *vport "  ","
.BI "int mask "  ","
.BI "char *fmt "  ","
.BI "uint32_t data1 "  ","
.BI "uint32_t data2 "  ","
.BI "uint32_t data3 "  ");"
.SH ARGUMENTS
.IP "vport" 12
The vport to associate this trace string with for retrieval.
.IP "mask" 12
Log entry classification.
.IP "fmt" 12
Format string to be displayed when dumping the log.
.IP "data1" 12
1st data parameter to be applied to \fIfmt\fP.
.IP "data2" 12
2nd data parameter to be applied to \fIfmt\fP.
.IP "data3" 12
3rd data parameter to be applied to \fIfmt\fP.
.SH "DESCRIPTION"
This routine is used by the driver code to add a debugfs log entry to the
discovery trace buffer associated with \fIvport\fP. Only entries with a \fImask\fP that
match the current debugfs discovery mask will be saved. Entries that do not
match will be thrown away. \fIfmt\fP, \fIdata1\fP, \fIdata2\fP, and \fIdata3\fP are used like
printf when displaying the log.
