.TH "snd_pcm_new_internal" 9 "snd_pcm_new_internal" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
snd_pcm_new_internal \- create a new internal PCM instance
.SH SYNOPSIS
.B "int" snd_pcm_new_internal
.BI "(struct snd_card *card "  ","
.BI "const char *id "  ","
.BI "int device "  ","
.BI "int playback_count "  ","
.BI "int capture_count "  ","
.BI "struct snd_pcm **rpcm "  ");"
.SH ARGUMENTS
.IP "card" 12
the card instance
.IP "id" 12
the id string
.IP "device" 12
the device index (zero based - shared with normal PCMs)
.IP "playback_count" 12
the number of substreams for playback
.IP "capture_count" 12
the number of substreams for capture
.IP "rpcm" 12
the pointer to store the new pcm instance
.SH "DESCRIPTION"
Creates a new internal PCM instance with no userspace device or procfs
entries. This is used by ASoC Back End PCMs in order to create a PCM that
will only be used internally by kernel drivers. i.e. it cannot be opened
by userspace. It provides existing ASoC components drivers with a substream
and access to any private data.

The pcm operators have to be set afterwards to the new instance
via \fBsnd_pcm_set_ops\fP.
.SH "RETURN"
Zero if successful, or a negative error code on failure.
