.TH "klp_shadow_get_or_alloc" 9 "klp_shadow_get_or_alloc" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
klp_shadow_get_or_alloc \- get existing or allocate a new shadow variable
.SH SYNOPSIS
.B "void *" klp_shadow_get_or_alloc
.BI "(void *obj "  ","
.BI "unsigned long id "  ","
.BI "size_t size "  ","
.BI "gfp_t gfp_flags "  ","
.BI "klp_shadow_ctor_t ctor "  ","
.BI "void *ctor_data "  ");"
.SH ARGUMENTS
.IP "obj" 12
pointer to parent object
.IP "id" 12
data identifier
.IP "size" 12
size of attached data
.IP "gfp_flags" 12
GFP mask for allocation
.IP "ctor" 12
custom constructor to initialize the shadow data (optional)
.IP "ctor_data" 12
pointer to any data needed by \fIctor\fP (optional)
.SH "DESCRIPTION"
Returns a pointer to existing shadow data if an <obj, id> shadow
variable is already present.  Otherwise, it creates a new shadow
variable like \fBklp_shadow_alloc\fP.

This function guarantees that only one shadow variable exists with the given
\fIid\fP for the given \fIobj\fP.  It also guarantees that the constructor function
will be called only when the variable did not exist before.  The cost is
that \fIctor\fP is called in atomic context under a spin lock.
.SH "RETURN"
the shadow variable data element, NULL on failure.
