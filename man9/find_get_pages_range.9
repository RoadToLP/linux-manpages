.TH "find_get_pages_range" 9 "find_get_pages_range" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
find_get_pages_range \- gang pagecache lookup
.SH SYNOPSIS
.B "unsigned" find_get_pages_range
.BI "(struct address_space *mapping "  ","
.BI "pgoff_t *start "  ","
.BI "pgoff_t end "  ","
.BI "unsigned int nr_pages "  ","
.BI "struct page **pages "  ");"
.SH ARGUMENTS
.IP "mapping" 12
The address_space to search
.IP "start" 12
The starting page index
.IP "end" 12
The final page index (inclusive)
.IP "nr_pages" 12
The maximum number of pages
.IP "pages" 12
Where the resulting pages are placed
.SH "DESCRIPTION"
\fBfind_get_pages_range\fP will search for and return a group of up to \fInr_pages\fP
pages in the mapping starting at index \fIstart\fP and up to index \fIend\fP
(inclusive).  The pages are placed at \fIpages\fP.  \fBfind_get_pages_range\fP takes
a reference against the returned pages.

The search returns a group of mapping-contiguous pages with ascending
indexes.  There may be holes in the indices due to not-present pages.
We also update \fIstart\fP to index the next page for the traversal.
.SH "RETURN"
the number of pages which were found. If this number is
smaller than \fInr_pages\fP, the end of specified range has been
reached.
