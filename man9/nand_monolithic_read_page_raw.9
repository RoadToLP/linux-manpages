.TH "nand_monolithic_read_page_raw" 9 "nand_monolithic_read_page_raw" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
nand_monolithic_read_page_raw \- Monolithic page read in raw mode
.SH SYNOPSIS
.B "int" nand_monolithic_read_page_raw
.BI "(struct nand_chip *chip "  ","
.BI "u8 *buf "  ","
.BI "int oob_required "  ","
.BI "int page "  ");"
.SH ARGUMENTS
.IP "chip" 12
NAND chip info structure
.IP "buf" 12
buffer to store read data
.IP "oob_required" 12
caller requires OOB data read to chip->oob_poi
.IP "page" 12
page number to read
.SH "DESCRIPTION"
This is a raw page read, ie. without any error detection/correction.
Monolithic means we are requesting all the relevant data (main plus
eventually OOB) to be loaded in the NAND cache and sent over the
bus (from the NAND chip to the NAND controller) in a single
operation. This is an alternative to \fBnand_read_page_raw\fP, which
first reads the main data, and if the OOB data is requested too,
then reads more data on the bus.
