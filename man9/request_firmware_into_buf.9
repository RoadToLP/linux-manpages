.TH "request_firmware_into_buf" 9 "request_firmware_into_buf" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
request_firmware_into_buf \- load firmware into a previously allocated buffer
.SH SYNOPSIS
.B "int" request_firmware_into_buf
.BI "(const struct firmware **firmware_p "  ","
.BI "const char *name "  ","
.BI "struct device *device "  ","
.BI "void *buf "  ","
.BI "size_t size "  ");"
.SH ARGUMENTS
.IP "firmware_p" 12
pointer to firmware image
.IP "name" 12
name of firmware file
.IP "device" 12
device for which firmware is being loaded and DMA region allocated
.IP "buf" 12
address of buffer to load firmware into
.IP "size" 12
size of buffer
.SH "DESCRIPTION"
This function works pretty much like \fBrequest_firmware\fP, but it doesn't
allocate a buffer to hold the firmware data. Instead, the firmware
is loaded directly into the buffer pointed to by \fIbuf\fP and the \fIfirmware_p\fP
data member is pointed at \fIbuf\fP.

This function doesn't cache firmware either.
