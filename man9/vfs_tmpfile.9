.TH "vfs_tmpfile" 9 "vfs_tmpfile" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
vfs_tmpfile \- create tmpfile
.SH SYNOPSIS
.B "struct dentry *" vfs_tmpfile
.BI "(struct user_namespace *mnt_userns "  ","
.BI "struct dentry *dentry "  ","
.BI "umode_t mode "  ","
.BI "int open_flag "  ");"
.SH ARGUMENTS
.IP "mnt_userns" 12
user namespace of the mount the inode was found from
.IP "dentry" 12
pointer to dentry of the base directory
.IP "mode" 12
mode of the new tmpfile
.IP "open_flag" 12
-- undescribed --
.SH "DESCRIPTION"
Create a temporary file.

If the inode has been found through an idmapped mount the user namespace of
the vfsmount must be passed through \fImnt_userns\fP. This function will then take
care to map the inode according to \fImnt_userns\fP before checking permissions.
On non-idmapped mounts or if permission checking is to be performed on the
raw inode simply passs init_user_ns.
