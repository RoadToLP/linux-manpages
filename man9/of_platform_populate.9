.TH "of_platform_populate" 9 "of_platform_populate" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
of_platform_populate \- Populate platform_devices from device tree data
.SH SYNOPSIS
.B "int" of_platform_populate
.BI "(struct device_node *root "  ","
.BI "const struct of_device_id *matches "  ","
.BI "const struct of_dev_auxdata *lookup "  ","
.BI "struct device *parent "  ");"
.SH ARGUMENTS
.IP "root" 12
parent of the first level to probe or NULL for the root of the tree
.IP "matches" 12
match table, NULL to use the default
.IP "lookup" 12
auxdata table for matching id and platform_data with device nodes
.IP "parent" 12
parent to hook devices from, NULL for toplevel
.SH "DESCRIPTION"
Similar to \fBof_platform_bus_probe\fP, this function walks the device tree
and creates devices from nodes.  It differs in that it follows the modern
convention of requiring all device nodes to have a 'compatible' property,
and it is suitable for creating devices which are children of the root
node (of_platform_bus_probe will only create children of the root which
are selected by the \fImatches\fP argument).

New board support should be using this function instead of
\fBof_platform_bus_probe\fP.

Returns 0 on success, < 0 on failure.
