.TH "thermal_zone_device_register" 9 "thermal_zone_device_register" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
thermal_zone_device_register \- register a new thermal zone device
.SH SYNOPSIS
.B "struct thermal_zone_device *" thermal_zone_device_register
.BI "(const char *type "  ","
.BI "int trips "  ","
.BI "int mask "  ","
.BI "void *devdata "  ","
.BI "struct thermal_zone_device_ops *ops "  ","
.BI "struct thermal_zone_params *tzp "  ","
.BI "int passive_delay "  ","
.BI "int polling_delay "  ");"
.SH ARGUMENTS
.IP "type" 12
the thermal zone device type
.IP "trips" 12
the number of trip points the thermal zone support
.IP "mask" 12
a bit string indicating the writeablility of trip points
.IP "devdata" 12
private device data
.IP "ops" 12
standard thermal zone device callbacks
.IP "tzp" 12
thermal zone platform parameters
.IP "passive_delay" 12
number of milliseconds to wait between polls when
performing passive cooling
.IP "polling_delay" 12
number of milliseconds to wait between polls when checking
whether trip points have been crossed (0 for interrupt
driven systems)
.SH "DESCRIPTION"
This interface function adds a new thermal zone device (sensor) to
/sys/class/thermal folder as thermal_zone[0-*]. It tries to bind all the
thermal cooling devices registered at the same time.
\fBthermal_zone_device_unregister\fP must be called when the device is no
longer needed. The passive cooling depends on the .\fBget_trend\fP return value.
.SH "RETURN"
a pointer to the created struct thermal_zone_device or an
in case of error, an ERR_PTR. Caller must check return value with
IS_ERR*() helpers.
