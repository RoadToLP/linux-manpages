.TH "binderfs_binder_device_create" 9 "binderfs_binder_device_create" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
binderfs_binder_device_create \- allocate inode from super block of a binderfs mount
.SH SYNOPSIS
.B "int" binderfs_binder_device_create
.BI "(struct inode *ref_inode "  ","
.BI "struct binderfs_device __user *userp "  ","
.BI "struct binderfs_device *req "  ");"
.SH ARGUMENTS
.IP "ref_inode" 12
inode from wich the super block will be taken
.IP "userp" 12
buffer to copy information about new device for userspace to
.IP "req" 12
struct binderfs_device as copied from userspace
.SH "DESCRIPTION"
This function allocates a new binder_device and reserves a new minor
number for it.
Minor numbers are limited and tracked globally in binderfs_minors. The
function will stash a struct binder_device for the specific binder
device in i_private of the inode.
It will go on to allocate a new inode from the super block of the
filesystem mount, stash a struct binder_device in its i_private field
and attach a dentry to that inode.
.SH "RETURN"
0 on success, negative errno on failure
