.TH "qla8044_lock_recovery" 9 "qla8044_lock_recovery" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
qla8044_lock_recovery \- Recovers the idc_lock.
.SH SYNOPSIS
.B "int" qla8044_lock_recovery
.BI "(struct scsi_qla_host *vha "  ");"
.SH ARGUMENTS
.IP "vha" 12
Pointer to adapter structure
.SH "DESCRIPTION"
Lock Recovery Register
5-2  Lock recovery owner: Function ID of driver doing lock recovery,
valid if bits 1..0 are set by driver doing lock recovery.
1-0  1 - Driver intends to force unlock the IDC lock.
2 - Driver is moving forward to unlock the IDC lock. Driver clears
this field after force unlocking the IDC lock.

Lock Recovery process
a. Read the IDC_LOCK_RECOVERY register. If the value in bits 1..0 is
greater than 0, then wait for the other driver to unlock otherwise
move to the next step.
b. Indicate intent to force-unlock by writing 1h to the IDC_LOCK_RECOVERY
register bits 1..0 and also set the function# in bits 5..2.
c. Read the IDC_LOCK_RECOVERY register again after a delay of 200ms.
Wait for the other driver to perform lock recovery if the function
number in bits 5..2 has changed, otherwise move to the next step.
d. Write a value of 2h to the IDC_LOCK_RECOVERY register bits 1..0
leaving your function# in bits 5..2.
e. Force unlock using the DRIVER_UNLOCK register and immediately clear
the IDC_LOCK_RECOVERY bits 5..0 by writing 0.
