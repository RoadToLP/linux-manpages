.TH "usb_gstrings_attach" 9 "usb_gstrings_attach" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
usb_gstrings_attach \- attach gadget strings to a cdev and assign ids
.SH SYNOPSIS
.B "struct usb_string *" usb_gstrings_attach
.BI "(struct usb_composite_dev *cdev "  ","
.BI "struct usb_gadget_strings **sp "  ","
.BI "unsigned n_strings "  ");"
.SH ARGUMENTS
.IP "cdev" 12
the device whose string descriptor IDs are being allocated
and attached.
.IP "sp" 12
an array of usb_gadget_strings to attach.
.IP "n_strings" 12
number of entries in each usb_strings array (sp[]->strings)
.SH "DESCRIPTION"
This function will create a deep copy of usb_gadget_strings and usb_string
and attach it to the cdev. The actual string (usb_string.s) will not be
copied but only a referenced will be made. The struct usb_gadget_strings
array may contain multiple languages and should be NULL terminated.
The ->language pointer of each struct usb_gadget_strings has to contain the
same amount of entries.
For instance: sp[0] is en-US, sp[1] is es-ES. It is expected that the first
usb_string entry of es-ES contains the translation of the first usb_string
entry of en-US. Therefore both entries become the same id assign.
