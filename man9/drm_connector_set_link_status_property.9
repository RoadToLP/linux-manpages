.TH "drm_connector_set_link_status_property" 9 "drm_connector_set_link_status_property" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
drm_connector_set_link_status_property \- Set link status property of a connector
.SH SYNOPSIS
.B "void" drm_connector_set_link_status_property
.BI "(struct drm_connector *connector "  ","
.BI "uint64_t link_status "  ");"
.SH ARGUMENTS
.IP "connector" 12
drm connector
.IP "link_status" 12
new value of link status property (0: Good, 1: Bad)
.SH "DESCRIPTION"
In usual working scenario, this link status property will always be set to
"GOOD". If something fails during or after a mode set, the kernel driver
may set this link status property to "BAD". The caller then needs to send a
hotplug uevent for userspace to re-check the valid modes through
GET_CONNECTOR_IOCTL and retry modeset.

The reason for adding this property is to handle link training failures, but
it is not limited to DP or link training. For example, if we implement
asynchronous setcrtc, this property can be used to report any failures in that.
.SH "NOTE"
Drivers cannot rely on userspace to support this property and
issue a modeset. As such, they may choose to handle issues (like
re-training a link) without userspace's intervention.
