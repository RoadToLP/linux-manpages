.TH "handle_early_requeue_pi_wakeup" 9 "handle_early_requeue_pi_wakeup" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
handle_early_requeue_pi_wakeup \- Detect early wakeup on the initial futex
.SH SYNOPSIS
.B "int" handle_early_requeue_pi_wakeup
.BI "(struct futex_hash_bucket *hb "  ","
.BI "struct futex_q *q "  ","
.BI "union futex_key *key2 "  ","
.BI "struct hrtimer_sleeper *timeout "  ");"
.SH ARGUMENTS
.IP "hb" 12
the hash_bucket futex_q was original enqueued on
.IP "q" 12
the futex_q woken while waiting to be requeued
.IP "key2" 12
the futex_key of the requeue target futex
.IP "timeout" 12
the timeout associated with the wait (NULL if none)
.SH "DESCRIPTION"
Detect if the task was woken on the initial futex as opposed to the requeue
target futex.  If so, determine if it was a timeout or a signal that caused
the wakeup and return the appropriate error code to the caller.  Must be
called with the hb lock held.
.SH "RETURN"
-  0 = no early wakeup detected;
- <0 = -ETIMEDOUT or -ERESTARTNOINTR
