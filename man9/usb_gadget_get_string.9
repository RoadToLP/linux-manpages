.TH "usb_gadget_get_string" 9 "usb_gadget_get_string" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
usb_gadget_get_string \- fill out a string descriptor
.SH SYNOPSIS
.B "int" usb_gadget_get_string
.BI "(const struct usb_gadget_strings *table "  ","
.BI "int id "  ","
.BI "u8 *buf "  ");"
.SH ARGUMENTS
.IP "table" 12
of c strings encoded using UTF-8
.IP "id" 12
string id, from low byte of wValue in get string descriptor
.IP "buf" 12
at least 256 bytes, must be 16-bit aligned
.SH "DESCRIPTION"
Finds the UTF-8 string matching the ID, and converts it into a
string descriptor in utf16-le.
Returns length of descriptor (always even) or negative errno

If your driver needs stings in multiple languages, you'll probably
"switch (wIndex) { ... }"  in your ep0 string descriptor logic,
using this routine after choosing which set of UTF-8 strings to use.
Note that US-ASCII is a strict subset of UTF-8; any string bytes with
the eighth bit set will be multibyte UTF-8 characters, not ISO-8859/1
characters (which are also widely used in C strings).
