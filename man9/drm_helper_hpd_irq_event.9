.TH "drm_helper_hpd_irq_event" 9 "drm_helper_hpd_irq_event" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
drm_helper_hpd_irq_event \- hotplug processing
.SH SYNOPSIS
.B "bool" drm_helper_hpd_irq_event
.BI "(struct drm_device *dev "  ");"
.SH ARGUMENTS
.IP "dev" 12
drm_device
.SH "DESCRIPTION"
Drivers can use this helper function to run a detect cycle on all connectors
which have the DRM_CONNECTOR_POLL_HPD flag set in their \fIpolled\fP member. All
other connectors are ignored, which is useful to avoid reprobing fixed
panels.

This helper function is useful for drivers which can't or don't track hotplug
interrupts for each connector.

Drivers which support hotplug interrupts for each connector individually and
which have a more fine-grained detect logic should bypass this code and
directly call \fBdrm_kms_helper_hotplug_event\fP in case the connector state
changed.

This function must be called from process context with no mode
setting locks held.

Note that a connector can be both polled and probed from the hotplug handler,
in case the hotplug interrupt is known to be unreliable.
