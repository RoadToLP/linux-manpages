.TH "rhashtable_init" 9 "rhashtable_init" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
rhashtable_init \- initialize a new hash table
.SH SYNOPSIS
.B "int" rhashtable_init
.BI "(struct rhashtable *ht "  ","
.BI "const struct rhashtable_params *params "  ");"
.SH ARGUMENTS
.IP "ht" 12
hash table to be initialized
.IP "params" 12
configuration parameters
.SH "DESCRIPTION"
Initializes a new hash table based on the provided configuration
parameters. A table can be configured either with a variable or
fixed length key:

Configuration Example 1: Fixed length keys
struct test_obj {
int                     key;
void *                  my_member;
struct rhash_head       node;
};

struct rhashtable_params params = {
\&.head_offset = offsetof(struct test_obj, node),
\&.key_offset = offsetof(struct test_obj, key),
\&.key_len = sizeof(int),
\&.hashfn = jhash,
};

Configuration Example 2: Variable length keys
struct test_obj {
[...]
struct rhash_head       node;
};

u32 my_hash_fn(const void *data, u32 len, u32 seed)
{
struct test_obj *obj = data;

return [... hash ...];
}

struct rhashtable_params params = {
\&.head_offset = offsetof(struct test_obj, node),
\&.hashfn = jhash,
\&.obj_hashfn = my_hash_fn,
};
