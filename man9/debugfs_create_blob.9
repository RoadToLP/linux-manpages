.TH "debugfs_create_blob" 9 "debugfs_create_blob" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
debugfs_create_blob \- create a debugfs file that is used to read a binary blob
.SH SYNOPSIS
.B "struct dentry *" debugfs_create_blob
.BI "(const char *name "  ","
.BI "umode_t mode "  ","
.BI "struct dentry *parent "  ","
.BI "struct debugfs_blob_wrapper *blob "  ");"
.SH ARGUMENTS
.IP "name" 12
a pointer to a string containing the name of the file to create.
.IP "mode" 12
the permission that the file should have
.IP "parent" 12
a pointer to the parent dentry for this file.  This should be a
directory dentry if set.  If this parameter is NULL, then the
file will be created in the root of the debugfs filesystem.
.IP "blob" 12
a pointer to a struct debugfs_blob_wrapper which contains a pointer
to the blob data and the size of the data.
.SH "DESCRIPTION"
This function creates a file in debugfs with the given name that exports
\fIblob->data\fP as a binary blob. If the \fImode\fP variable is so set it can be
read from. Writing is not supported.

This function will return a pointer to a dentry if it succeeds.  This
pointer must be passed to the \fBdebugfs_remove\fP function when the file is
to be removed (no automatic cleanup happens if your module is unloaded,
you are responsible here.)  If an error occurs, ERR_PTR(-ERROR) will be
returned.

If debugfs is not enabled in the kernel, the value ERR_PTR(-ENODEV) will
be returned.
