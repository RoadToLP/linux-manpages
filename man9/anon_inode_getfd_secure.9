.TH "anon_inode_getfd_secure" 9 "anon_inode_getfd_secure" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
anon_inode_getfd_secure \- Like anon_inode_getfd(), but creates a new !S_PRIVATE anon inode rather than reuse the singleton anon inode, and calls the inode_init_security_anon() LSM hook. This allows the inode to have its own security context and for a LSM to reject creation of the inode.
.SH SYNOPSIS
.B "int" anon_inode_getfd_secure
.BI "(const char *name "  ","
.BI "const struct file_operations *fops "  ","
.BI "void *priv "  ","
.BI "int flags "  ","
.BI "const struct inode *context_inode "  ");"
.SH ARGUMENTS
.IP "name" 12
[in]    name of the "class" of the new file
.IP "fops" 12
[in]    file operations for the new file
.IP "priv" 12
[in]    private data for the new file (will be file's private_data)
.IP "flags" 12
[in]    flags
.IP "context_inode" 12
[in]    the logical relationship with the new inode (optional)
.SH "DESCRIPTION"
The LSM may use \fIcontext_inode\fP in \fBinode_init_security_anon\fP, but a
reference to it is not held.
