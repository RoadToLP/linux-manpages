.TH "pcpu_find_block_fit" 9 "pcpu_find_block_fit" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
pcpu_find_block_fit \- finds the block index to start searching
.SH SYNOPSIS
.B "int" pcpu_find_block_fit
.BI "(struct pcpu_chunk *chunk "  ","
.BI "int alloc_bits "  ","
.BI "size_t align "  ","
.BI "bool pop_only "  ");"
.SH ARGUMENTS
.IP "chunk" 12
chunk of interest
.IP "alloc_bits" 12
size of request in allocation units
.IP "align" 12
alignment of area (max PAGE_SIZE bytes)
.IP "pop_only" 12
use populated regions only
.SH "DESCRIPTION"
Given a chunk and an allocation spec, find the offset to begin searching
for a free region.  This iterates over the bitmap metadata blocks to
find an offset that will be guaranteed to fit the requirements.  It is
not quite first fit as if the allocation does not fit in the contig hint
of a block or chunk, it is skipped.  This errs on the side of caution
to prevent excess iteration.  Poor alignment can cause the allocator to
skip over blocks and chunks that have valid free areas.
.SH "RETURN"
The offset in the bitmap to begin searching.
-1 if no offset is found.
