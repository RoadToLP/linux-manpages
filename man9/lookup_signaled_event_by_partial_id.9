.TH "lookup_signaled_event_by_partial_id" 9 "lookup_signaled_event_by_partial_id" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
lookup_signaled_event_by_partial_id \- Lookup signaled event from partial ID
.SH SYNOPSIS
.B "struct kfd_event *" lookup_signaled_event_by_partial_id
.BI "(struct kfd_process *p "  ","
.BI "uint32_t id "  ","
.BI "uint32_t bits "  ");"
.SH ARGUMENTS
.IP "p" 12
Pointer to struct kfd_process
.IP "id" 12
ID to look up
.IP "bits" 12
Number of valid bits in \fIid\fP
.SH "DESCRIPTION"
Finds the first signaled event with a matching partial ID. If no
matching signaled event is found, returns NULL. In that case the
caller should assume that the partial ID is invalid and do an
exhaustive search of all siglaned events.

If multiple events with the same partial ID signal at the same
time, they will be found one interrupt at a time, not necessarily
in the same order the interrupts occurred. As long as the number of
interrupts is correct, all signaled events will be seen by the
driver.
