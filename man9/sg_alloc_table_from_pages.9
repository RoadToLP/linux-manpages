.TH "sg_alloc_table_from_pages" 9 "sg_alloc_table_from_pages" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
sg_alloc_table_from_pages \- Allocate and initialize an sg table from an array of pages
.SH SYNOPSIS
.B "int" sg_alloc_table_from_pages
.BI "(struct sg_table *sgt "  ","
.BI "struct page **pages "  ","
.BI "unsigned int n_pages "  ","
.BI "unsigned int offset "  ","
.BI "unsigned long size "  ","
.BI "gfp_t gfp_mask "  ");"
.SH ARGUMENTS
.IP "sgt" 12
The sg table header to use
.IP "pages" 12
Pointer to an array of page pointers
.IP "n_pages" 12
Number of pages in the pages array
.IP "offset" 12
Offset from start of the first page to the start of a buffer
.IP "size" 12
Number of valid bytes in the buffer (after offset)
.IP "gfp_mask" 12
GFP allocation mask
.SH "DESCRIPTION"
Allocate and initialize an sg table from a list of pages. Contiguous
ranges of the pages are squashed into a single scatterlist node. A user
may provide an offset at a start and a size of valid data in a buffer
specified by the page array. The returned sg table is released by
sg_free_table.
.SH "RETURN"
0 on success, negative error on failure
