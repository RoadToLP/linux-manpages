.TH "pcs_parse_one_pinctrl_entry" 9 "pcs_parse_one_pinctrl_entry" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
pcs_parse_one_pinctrl_entry \- parses a device tree mux entry
.SH SYNOPSIS
.B "int" pcs_parse_one_pinctrl_entry
.BI "(struct pcs_device *pcs "  ","
.BI "struct device_node *np "  ","
.BI "struct pinctrl_map **map "  ","
.BI "unsigned *num_maps "  ","
.BI "const char **pgnames "  ");"
.SH ARGUMENTS
.IP "pcs" 12
pinctrl driver instance
.IP "np" 12
device node of the mux entry
.IP "map" 12
map entry
.IP "num_maps" 12
number of map
.IP "pgnames" 12
pingroup names
.SH "DESCRIPTION"
Note that this binding currently supports only sets of one register + value.

Also note that this driver tries to avoid understanding pin and function
names because of the extra bloat they would cause especially in the case of
a large number of pins. This driver just sets what is specified for the board
in the .dts file. Further user space debugging tools can be developed to
decipher the pin and function names using debugfs.

If you are concerned about the boot time, set up the static pins in
the bootloader, and only set up selected pins as device tree entries.
