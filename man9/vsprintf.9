.TH "vsprintf" 9 "vsprintf" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
vsprintf \- Format a string and place it in a buffer
.SH SYNOPSIS
.B "int" vsprintf
.BI "(char *buf "  ","
.BI "const char *fmt "  ","
.BI "va_list args "  ");"
.SH ARGUMENTS
.IP "buf" 12
The buffer to place the result into
.IP "fmt" 12
The format string to use
.IP "args" 12
Arguments for the format string
.SH "DESCRIPTION"
The function returns the number of characters written
into \fIbuf\fP. Use \fBvsnprintf\fP or \fBvscnprintf\fP in order to avoid
buffer overflows.

If you're not already dealing with a va_list consider using \fBsprintf\fP.

See the \fBvsnprintf\fP documentation for format string extensions over C99.
