.TH "get_futex_key" 9 "get_futex_key" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
get_futex_key \- Get parameters which are the keys for a futex
.SH SYNOPSIS
.B "int" get_futex_key
.BI "(u32 __user *uaddr "  ","
.BI "bool fshared "  ","
.BI "union futex_key *key "  ","
.BI "enum futex_access rw "  ");"
.SH ARGUMENTS
.IP "uaddr" 12
virtual address of the futex
.IP "fshared" 12
false for a PROCESS_PRIVATE futex, true for PROCESS_SHARED
.IP "key" 12
address where result is stored.
.IP "rw" 12
mapping needs to be read/write (values: FUTEX_READ,
FUTEX_WRITE)
.SH "RETURN"
a negative error code or 0
.SH "DESCRIPTION"
The key words are stored in \fIkey\fP on success.

For shared mappings (when \fIfshared\fP), the key is:

( inode->i_sequence, page->index, offset_within_page )

[ also see \fBget_inode_sequence_number\fP ]

For private mappings (or when !\fIfshared\fP), the key is:

( current->mm, address, 0 )

This allows (cross process, where applicable) identification of the futex
without keeping the page pinned for the duration of the FUTEX_WAIT.

\fBlock_page\fP might sleep, the caller should not hold a spinlock.
