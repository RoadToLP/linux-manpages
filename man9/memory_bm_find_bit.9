.TH "memory_bm_find_bit" 9 "memory_bm_find_bit" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
memory_bm_find_bit \- Find the bit for a given PFN in a memory bitmap.
.SH SYNOPSIS
.B "int" memory_bm_find_bit
.BI "(struct memory_bitmap *bm "  ","
.BI "unsigned long pfn "  ","
.BI "void **addr "  ","
.BI "unsigned int *bit_nr "  ");"
.SH ARGUMENTS
.IP "bm" 12
-- undescribed --
.IP "pfn" 12
-- undescribed --
.IP "addr" 12
-- undescribed --
.IP "bit_nr" 12
-- undescribed --
.SH "DESCRIPTION"

Find the bit in memory bitmap \fIbm\fP that corresponds to the given PFN.
The cur.zone, cur.block and cur.node_pfn members of \fIbm\fP are updated.

Walk the radix tree to find the page containing the bit that represents \fIpfn\fP
and return the position of the bit in \fIaddr\fP and \fIbit_nr\fP.
