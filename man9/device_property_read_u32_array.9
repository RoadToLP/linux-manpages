.TH "device_property_read_u32_array" 9 "device_property_read_u32_array" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
device_property_read_u32_array \- return a u32 array property of a device
.SH SYNOPSIS
.B "int" device_property_read_u32_array
.BI "(struct device *dev "  ","
.BI "const char *propname "  ","
.BI "u32 *val "  ","
.BI "size_t nval "  ");"
.SH ARGUMENTS
.IP "dev" 12
Device to get the property of
.IP "propname" 12
Name of the property
.IP "val" 12
The values are stored here or NULL to return the number of values
.IP "nval" 12
Size of the \fIval\fP array
.SH "DESCRIPTION"
Function reads an array of u32 properties with \fIpropname\fP from the device
firmware description and stores them to \fIval\fP if found.
.SH "RETURN"
number of values if \fIval\fP was NULL,
0 if the property was found (success),
-EINVAL if given arguments are not valid,
-ENODATA if the property does not have a value,
-EPROTO if the property is not an array of numbers,
-EOVERFLOW if the size of the property is not as expected.
-ENXIO if no suitable firmware interface is present.
