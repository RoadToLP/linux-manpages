.TH "proc_scsi_write" 9 "proc_scsi_write" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
proc_scsi_write \- handle writes to /proc/scsi/scsi
.SH SYNOPSIS
.B "ssize_t" proc_scsi_write
.BI "(struct file *file "  ","
.BI "const char __user *buf "  ","
.BI "size_t length "  ","
.BI "loff_t *ppos "  ");"
.SH ARGUMENTS
.IP "file" 12
not used
.IP "buf" 12
buffer to write
.IP "length" 12
length of buf, at most PAGE_SIZE
.IP "ppos" 12
not used
.SH "DESCRIPTION"
this provides a legacy mechanism to add or remove devices by
Host, Channel, ID, and Lun.  To use,
"echo 'scsi add-single-device 0 1 2 3' > /proc/scsi/scsi" or
"echo 'scsi remove-single-device 0 1 2 3' > /proc/scsi/scsi" with
"0 1 2 3" replaced by the Host, Channel, Id, and Lun.
.SH "NOTE"
this seems to be aimed at parallel SCSI. Most modern busses (USB,
SATA, Firewire, Fibre Channel, etc) dynamically assign these values to
provide a unique identifier and nothing more.
