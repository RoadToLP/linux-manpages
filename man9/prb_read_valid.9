.TH "prb_read_valid" 9 "prb_read_valid" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
prb_read_valid \- Non-blocking read of a requested record or (if gone) the next available record.
.SH SYNOPSIS
.B "bool" prb_read_valid
.BI "(struct printk_ringbuffer *rb "  ","
.BI "u64 seq "  ","
.BI "struct printk_record *r "  ");"
.SH ARGUMENTS
.IP "rb" 12
The ringbuffer to read from.
.IP "seq" 12
The sequence number of the record to read.
.IP "r" 12
A record data buffer to store the read record to.
.SH "DESCRIPTION"
This is the public function available to readers to read a record.

The reader provides the \fIinfo\fP and \fItext_buf\fP buffers of \fIr\fP to be
filled in. Any of the buffer pointers can be set to NULL if the reader
is not interested in that data. To ensure proper initialization of \fIr\fP,
\fBprb_rec_init_rd\fP should be used.

On success, the reader must check r->info.seq to see which record was
actually read. This allows the reader to detect dropped records.

Failure means \fIseq\fP refers to a not yet written record.
.SH "CONTEXT"
Any context.
.SH "RETURN"
true if a record was read, otherwise false.
