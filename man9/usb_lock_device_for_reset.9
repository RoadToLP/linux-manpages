.TH "usb_lock_device_for_reset" 9 "usb_lock_device_for_reset" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
usb_lock_device_for_reset \- cautiously acquire the lock for a usb device structure
.SH SYNOPSIS
.B "int" usb_lock_device_for_reset
.BI "(struct usb_device *udev "  ","
.BI "const struct usb_interface *iface "  ");"
.SH ARGUMENTS
.IP "udev" 12
device that's being locked
.IP "iface" 12
interface bound to the driver making the request (optional)
.SH "DESCRIPTION"
Attempts to acquire the device lock, but fails if the device is
NOTATTACHED or SUSPENDED, or if iface is specified and the interface
is neither BINDING nor BOUND.  Rather than sleeping to wait for the
lock, the routine polls repeatedly.  This is to prevent deadlock with
disconnect; in some drivers (such as usb-storage) the \fBdisconnect\fP
or \fBsuspend\fP method will block waiting for a device reset to complete.
.SH "RETURN"
A negative error code for failure, otherwise 0.
