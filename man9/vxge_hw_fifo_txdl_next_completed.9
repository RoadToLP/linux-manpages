.TH "vxge_hw_fifo_txdl_next_completed" 9 "vxge_hw_fifo_txdl_next_completed" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
vxge_hw_fifo_txdl_next_completed \- Retrieve next completed descriptor.
.SH SYNOPSIS
.B "enum vxge_hw_status" vxge_hw_fifo_txdl_next_completed
.BI "(struct __vxge_hw_fifo *fifo "  ","
.BI "void **txdlh "  ","
.BI "enum vxge_hw_fifo_tcode *t_code "  ");"
.SH ARGUMENTS
.IP "fifo" 12
Handle to the fifo object used for non offload send
.IP "txdlh" 12
Descriptor handle. Returned by HW.
.IP "t_code" 12
Transfer code, as per Titan User Guide,
Transmit Descriptor Format.
Returned by HW.
.SH "DESCRIPTION"
Retrieve the _next_ completed descriptor.
HW uses channel callback (*vxge_hw_channel_callback_f) to notifiy
driver of new completed descriptors. After that
the driver can use vxge_hw_fifo_txdl_next_completed to retrieve the rest
completions (the very first completion is passed by HW via
vxge_hw_channel_callback_f).

Implementation-wise, the driver is free to call
vxge_hw_fifo_txdl_next_completed either immediately from inside the
channel callback, or in a deferred fashion and separate (from HW)
context.

Non-zero \fIt_code\fP means failure to process the descriptor.
The failure could happen, for instance, when the link is
down, in which case Titan completes the descriptor because it
is not able to send the data out.

For details please refer to Titan User Guide.
.SH "RETURN"
VXGE_HW_OK - success.
VXGE_HW_INF_NO_MORE_COMPLETED_DESCRIPTORS - No completed descriptors
are currently available for processing.
