.TH "i2400m_dev_bootstrap" 9 "i2400m_dev_bootstrap" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
i2400m_dev_bootstrap \- Bring the device to a known state and upload firmware
.SH SYNOPSIS
.B "int" i2400m_dev_bootstrap
.BI "(struct i2400m *i2400m "  ","
.BI "enum i2400m_bri flags "  ");"
.SH ARGUMENTS
.IP "i2400m" 12
device descriptor
.IP "flags" 12
I2400M_BRI_SOFT: a reboot barker has been seen
already, so don't wait for it.

I2400M_BRI_NO_REBOOT: Don't send a reboot command, but wait
for a reboot barker notification. This is a one shot; if
the state machine needs to send a reboot command it will.
.SH "RETURN"
>= 0 if ok, < 0 errno code on error.
.SH "DESCRIPTION"
This sets up the firmware upload environment, loads the firmware
file from disk, verifies and then calls the firmware upload process
per se.

Can be called either from probe, or after a warm reset.  Can not be
called from within an interrupt.  All the flow in this code is
single-threade; all I/Os are synchronous.
