.TH "swap_vma_readahead" 9 "swap_vma_readahead" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
swap_vma_readahead \- swap in pages in hope we need them soon
.SH SYNOPSIS
.B "struct page *" swap_vma_readahead
.BI "(swp_entry_t fentry "  ","
.BI "gfp_t gfp_mask "  ","
.BI "struct vm_fault *vmf "  ");"
.SH ARGUMENTS
.IP "fentry" 12
swap entry of this memory
.IP "gfp_mask" 12
memory allocation flags
.IP "vmf" 12
fault information
.SH "DESCRIPTION"
Returns the struct page for entry and addr, after queueing swapin.

Primitive swap readahead code. We simply read in a few pages whoes
virtual addresses are around the fault address in the same vma.

Caller must hold read mmap_lock if vmf->vma is not NULL.
