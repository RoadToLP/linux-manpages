.TH "vxge_hw_ring_rxd_free" 9 "vxge_hw_ring_rxd_free" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
vxge_hw_ring_rxd_free \- Free descriptor.
.SH SYNOPSIS
.B "void" vxge_hw_ring_rxd_free
.BI "(struct __vxge_hw_ring *ring "  ","
.BI "void *rxdh "  ");"
.SH ARGUMENTS
.IP "ring" 12
Handle to the ring object used for receive
.IP "rxdh" 12
Descriptor handle.
.SH "DESCRIPTION"
Free the reserved descriptor. This operation is "symmetrical" to
vxge_hw_ring_rxd_reserve. The "free-ing" completes the descriptor's
lifecycle.

After free-ing (see \fBvxge_hw_ring_rxd_free\fP) the descriptor again can
be:

- reserved (vxge_hw_ring_rxd_reserve);

- posted     (vxge_hw_ring_rxd_post);

- completed (vxge_hw_ring_rxd_next_completed);

- and recycled again (vxge_hw_ring_rxd_free).

For alternative state transitions and more details please refer to
the design doc.
