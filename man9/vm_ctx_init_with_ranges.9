.TH "vm_ctx_init_with_ranges" 9 "vm_ctx_init_with_ranges" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
vm_ctx_init_with_ranges \- initialize virtual memory for context.
.SH SYNOPSIS
.B "int" vm_ctx_init_with_ranges
.BI "(struct hl_ctx *ctx "  ","
.BI "u64 host_range_start "  ","
.BI "u64 host_range_end "  ","
.BI "u32 host_page_size "  ","
.BI "u64 host_huge_range_start "  ","
.BI "u64 host_huge_range_end "  ","
.BI "u32 host_huge_page_size "  ","
.BI "u64 dram_range_start "  ","
.BI "u64 dram_range_end "  ","
.BI "u32 dram_page_size "  ");"
.SH ARGUMENTS
.IP "ctx" 12
pointer to the habanalabs context structure.
.IP "host_range_start" 12
host virtual addresses range start.
.IP "host_range_end" 12
host virtual addresses range end.
.IP "host_page_size" 12
-- undescribed --
.IP "host_huge_range_start" 12
host virtual addresses range start for memory
allocated with huge pages.
.IP "host_huge_range_end" 12
host virtual addresses range end for memory allocated
with huge pages.
.IP "host_huge_page_size" 12
-- undescribed --
.IP "dram_range_start" 12
dram virtual addresses range start.
.IP "dram_range_end" 12
dram virtual addresses range end.
.IP "dram_page_size" 12
-- undescribed --
.SH "DESCRIPTION"
This function initializes the following:
- MMU for context.
- Virtual address to area descriptor hashtable.
- Virtual block list of available virtual memory.
