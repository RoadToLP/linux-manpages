.TH "spi_sync" 9 "spi_sync" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
spi_sync \- blocking/synchronous SPI data transfers
.SH SYNOPSIS
.B "int" spi_sync
.BI "(struct spi_device *spi "  ","
.BI "struct spi_message *message "  ");"
.SH ARGUMENTS
.IP "spi" 12
device with which data will be exchanged
.IP "message" 12
describes the data transfers
.SH "CONTEXT"
can sleep
.SH "DESCRIPTION"
This call may only be used from a context that may sleep.  The sleep
is non-interruptible, and has no timeout.  Low-overhead controller
drivers may DMA directly into and out of the message buffers.

Note that the SPI device's chip select is active during the message,
and then is normally disabled between messages.  Drivers for some
frequently-used devices may want to minimize costs of selecting a chip,
by leaving it selected in anticipation that the next message will go
to the same chip.  (That may increase power usage.)

Also, the caller is guaranteeing that the memory associated with the
message will not be freed before this call returns.
.SH "RETURN"
zero on success, else a negative error code.
