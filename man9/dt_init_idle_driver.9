.TH "dt_init_idle_driver" 9 "dt_init_idle_driver" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
dt_init_idle_driver \- Parse the DT idle states and initialize the idle driver states array
.SH SYNOPSIS
.B "int" dt_init_idle_driver
.BI "(struct cpuidle_driver *drv "  ","
.BI "const struct of_device_id *matches "  ","
.BI "unsigned int start_idx "  ");"
.SH ARGUMENTS
.IP "drv" 12
Pointer to CPU idle driver to be initialized
.IP "matches" 12
Array of of_device_id match structures to search in for
compatible idle state nodes. The data pointer for each valid
struct of_device_id entry in the matches array must point to
a function with the following signature, that corresponds to
the CPUidle state enter function signature:

int (*)(struct cpuidle_device *dev,
struct cpuidle_driver *drv,
int index);
.IP "start_idx" 12
First idle state index to be initialized
.SH "DESCRIPTION"
If DT idle states are detected and are valid the state count and states
array entries in the cpuidle driver are initialized accordingly starting
from index start_idx.
.SH "RETURN"
number of valid DT idle states parsed, <0 on failure
