.TH "dev_pm_enable_wake_irq_check" 9 "dev_pm_enable_wake_irq_check" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
dev_pm_enable_wake_irq_check \- Checks and enables wake-up interrupt
.SH SYNOPSIS
.B "void" dev_pm_enable_wake_irq_check
.BI "(struct device *dev "  ","
.BI "bool can_change_status "  ");"
.SH ARGUMENTS
.IP "dev" 12
Device
.IP "can_change_status" 12
Can change wake-up interrupt status
.SH "DESCRIPTION"
Enables wakeirq conditionally. We need to enable wake-up interrupt
lazily on the first \fBrpm_suspend\fP. This is needed as the consumer device
starts in RPM_SUSPENDED state, and the the first \fBpm_runtime_get\fP would
otherwise try to disable already disabled wakeirq. The wake-up interrupt
starts disabled with IRQ_NOAUTOEN set.

Should be only called from \fBrpm_suspend\fP and \fBrpm_resume\fP path.
Caller must hold \fIdev->power\fP.lock to change wirq->status
