.TH "ntfs_readpage" 9 "ntfs_readpage" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
ntfs_readpage \- fill a @page of a @file with data from the device
.SH SYNOPSIS
.B "int" ntfs_readpage
.BI "(struct file *file "  ","
.BI "struct page *page "  ");"
.SH ARGUMENTS
.IP "file" 12
open file to which the page \fIpage\fP belongs or NULL
.IP "page" 12
page cache page to fill with data
.SH "DESCRIPTION"
For non-resident attributes, \fBntfs_readpage\fP fills the \fIpage\fP of the open
file \fIfile\fP by calling the ntfs version of the generic \fBblock_read_full_page\fP
function, \fBntfs_read_block\fP, which in turn creates and reads in the buffers
associated with the page asynchronously.

For resident attributes, OTOH, \fBntfs_readpage\fP fills \fIpage\fP by copying the
data from the mft record (which at this stage is most likely in memory) and
fills the remainder with zeroes. Thus, in this case, I/O is synchronous, as
even if the mft record is not cached at this point in time, we need to wait
for it to be read in before we can do the copy.

Return 0 on success and -errno on error.
