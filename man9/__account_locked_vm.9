.TH "__account_locked_vm" 9 "__account_locked_vm" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
__account_locked_vm \- account locked pages to an mm's locked_vm
.SH SYNOPSIS
.B "int" __account_locked_vm
.BI "(struct mm_struct *mm "  ","
.BI "unsigned long pages "  ","
.BI "bool inc "  ","
.BI "struct task_struct *task "  ","
.BI "bool bypass_rlim "  ");"
.SH ARGUMENTS
.IP "mm" 12
mm to account against
.IP "pages" 12
number of pages to account
.IP "inc" 12
true if \fIpages\fP should be considered positive, false if not
.IP "task" 12
task used to check RLIMIT_MEMLOCK
.IP "bypass_rlim" 12
true if checking RLIMIT_MEMLOCK should be skipped
.SH "DESCRIPTION"
Assumes \fItask\fP and \fImm\fP are valid (i.e. at least one reference on each), and
that mmap_lock is held as writer.
.SH "RETURN"
* 0       on success
* -ENOMEM if RLIMIT_MEMLOCK would be exceeded.
