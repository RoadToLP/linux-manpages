.TH "__acpi_node_get_property_reference" 9 "__acpi_node_get_property_reference" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
__acpi_node_get_property_reference \- returns handle to the referenced object
.SH SYNOPSIS
.B "int" __acpi_node_get_property_reference
.BI "(const struct fwnode_handle *fwnode "  ","
.BI "const char *propname "  ","
.BI "size_t index "  ","
.BI "size_t num_args "  ","
.BI "struct fwnode_reference_args *args "  ");"
.SH ARGUMENTS
.IP "fwnode" 12
Firmware node to get the property from
.IP "propname" 12
Name of the property
.IP "index" 12
Index of the reference to return
.IP "num_args" 12
Maximum number of arguments after each reference
.IP "args" 12
Location to store the returned reference with optional arguments
.SH "DESCRIPTION"
Find property with \fIname\fP, verifify that it is a package containing at least
one object reference and if so, store the ACPI device object pointer to the
target object in \fIargs->adev\fP.  If the reference includes arguments, store
them in the \fIargs->args\fP[] array.

If there's more than one reference in the property value package, \fIindex\fP is
used to select the one to return.

It is possible to leave holes in the property value set like in the
example below:

Package () {
"cs-gpios",
Package () {
^GPIO, 19, 0, 0,
^GPIO, 20, 0, 0,
0,
^GPIO, 21, 0, 0,
}
}

Calling this function with index 2 or index 3 return -ENOENT. If the
property does not contain any more values -ENOENT is returned. The NULL
entry must be single integer and preferably contain value 0.
.SH "RETURN"
0 on success, negative error code on failure.
