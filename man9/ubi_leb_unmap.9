.TH "ubi_leb_unmap" 9 "ubi_leb_unmap" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
ubi_leb_unmap \- un-map logical eraseblock.
.SH SYNOPSIS
.B "int" ubi_leb_unmap
.BI "(struct ubi_volume_desc *desc "  ","
.BI "int lnum "  ");"
.SH ARGUMENTS
.IP "desc" 12
volume descriptor
.IP "lnum" 12
logical eraseblock number
.SH "DESCRIPTION"
This function un-maps logical eraseblock \fIlnum\fP and schedules the
corresponding physical eraseblock for erasure, so that it will eventually be
physically erased in background. This operation is much faster than the
erase operation.

Unlike erase, the un-map operation does not guarantee that the logical
eraseblock will contain all 0xFF bytes when UBI is initialized again. For
example, if several logical eraseblocks are un-mapped, and an unclean reboot
happens after this, the logical eraseblocks will not necessarily be
un-mapped again when this MTD device is attached. They may actually be
mapped to the same physical eraseblocks again. So, this function has to be
used with care.

In other words, when un-mapping a logical eraseblock, UBI does not store
any information about this on the flash media, it just marks the logical
eraseblock as "un-mapped" in RAM. If UBI is detached before the physical
eraseblock is physically erased, it will be mapped again to the same logical
eraseblock when the MTD device is attached again.

The main and obvious use-case of this function is when the contents of a
logical eraseblock has to be re-written. Then it is much more efficient to
first un-map it, then write new data, rather than first erase it, then write
new data. Note, once new data has been written to the logical eraseblock,
UBI guarantees that the old contents has gone forever. In other words, if an
unclean reboot happens after the logical eraseblock has been un-mapped and
then written to, it will contain the last written data.

This function returns zero in case of success and a negative error code in
case of failure. If the volume is damaged because of an interrupted update
this function just returns immediately with -EBADF code.
