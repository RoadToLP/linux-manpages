.TH "rx51_secure_dispatcher" 9 "rx51_secure_dispatcher" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
rx51_secure_dispatcher \- Routine to dispatch secure PPA API calls
.SH SYNOPSIS
.B "u32" rx51_secure_dispatcher
.BI "(u32 idx "  ","
.BI "u32 process "  ","
.BI "u32 flag "  ","
.BI "u32 nargs "  ","
.BI "u32 arg1 "  ","
.BI "u32 arg2 "  ","
.BI "u32 arg3 "  ","
.BI "u32 arg4 "  ");"
.SH ARGUMENTS
.IP "idx" 12
The PPA API index
.IP "process" 12
Process ID
.IP "flag" 12
The flag indicating criticality of operation
.IP "nargs" 12
Number of valid arguments out of four.
\fIarg1\fP, arg2, arg3 args4: Parameters passed to secure API
.IP "arg1" 12
-- undescribed --
.IP "arg2" 12
-- undescribed --
.IP "arg3" 12
-- undescribed --
.IP "arg4" 12
-- undescribed --
.SH "DESCRIPTION"
Return the non-zero error value on failure.
.SH "NOTE"
rx51_secure_dispatcher differs from omap_secure_dispatcher because
it calling \fBomap_smc3\fP instead \fBomap_smc2\fP and param[0] is nargs+1
