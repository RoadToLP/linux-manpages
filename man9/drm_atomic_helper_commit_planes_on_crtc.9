.TH "drm_atomic_helper_commit_planes_on_crtc" 9 "drm_atomic_helper_commit_planes_on_crtc" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
drm_atomic_helper_commit_planes_on_crtc \- commit plane state for a CRTC
.SH SYNOPSIS
.B "void" drm_atomic_helper_commit_planes_on_crtc
.BI "(struct drm_crtc_state *old_crtc_state "  ");"
.SH ARGUMENTS
.IP "old_crtc_state" 12
atomic state object with the old CRTC state
.SH "DESCRIPTION"
This function commits the new plane state using the plane and atomic helper
functions for planes on the specific CRTC. It assumes that the atomic state
has already been pushed into the relevant object state pointers, since this
step can no longer fail.

This function is useful when plane updates should be done CRTC-by-CRTC
instead of one global step like \fBdrm_atomic_helper_commit_planes\fP does.

This function can only be savely used when planes are not allowed to move
between different CRTCs because this function doesn't handle inter-CRTC
depencies. Callers need to ensure that either no such depencies exist,
resolve them through ordering of commit calls or through some other means.
