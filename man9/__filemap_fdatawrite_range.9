.TH "__filemap_fdatawrite_range" 9 "__filemap_fdatawrite_range" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
__filemap_fdatawrite_range \- start writeback on mapping dirty pages in range
.SH SYNOPSIS
.B "int" __filemap_fdatawrite_range
.BI "(struct address_space *mapping "  ","
.BI "loff_t start "  ","
.BI "loff_t end "  ","
.BI "int sync_mode "  ");"
.SH ARGUMENTS
.IP "mapping" 12
address space structure to write
.IP "start" 12
offset in bytes where the range starts
.IP "end" 12
offset in bytes where the range ends (inclusive)
.IP "sync_mode" 12
enable synchronous operation
.SH "DESCRIPTION"
Start writeback against all of a mapping's dirty pages that lie
within the byte offsets <start, end> inclusive.

If sync_mode is WB_SYNC_ALL then this is a "data integrity" operation, as
opposed to a regular memory cleansing writeback.  The difference between
these two operations is that if a dirty page/buffer is encountered, it must
be waited upon, and not just skipped over.
.SH "RETURN"
0 on success, negative error code otherwise.
