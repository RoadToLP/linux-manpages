.TH "efx_mcdi_rpc" 9 "efx_mcdi_rpc" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
efx_mcdi_rpc \- Issue an MCDI command and wait for completion
.SH SYNOPSIS
.B "int" efx_mcdi_rpc
.BI "(struct efx_nic *efx "  ","
.BI "unsigned cmd "  ","
.BI "const efx_dword_t *inbuf "  ","
.BI "size_t inlen "  ","
.BI "efx_dword_t *outbuf "  ","
.BI "size_t outlen "  ","
.BI "size_t *outlen_actual "  ");"
.SH ARGUMENTS
.IP "efx" 12
NIC through which to issue the command
.IP "cmd" 12
Command type number
.IP "inbuf" 12
Command parameters
.IP "inlen" 12
Length of command parameters, in bytes.  Must be a multiple
of 4 and no greater than MCDI_CTL_SDU_LEN_MAX_V1.
.IP "outbuf" 12
Response buffer.  May be NULL if \fIoutlen\fP is 0.
.IP "outlen" 12
Length of response buffer, in bytes.  If the actual
response is longer than \fIoutlen\fP & ~3, it will be truncated
to that length.
.IP "outlen_actual" 12
Pointer through which to return the actual response
length.  May be NULL if this is not needed.
.SH "DESCRIPTION"
This function may sleep and therefore must be called in an appropriate
context.
.SH "RETURN"
A negative error code, or zero if successful.  The error
code may come from the MCDI response or may indicate a failure
to communicate with the MC.  In the former case, the response
will still be copied to \fIoutbuf\fP and *\fIoutlen_actual\fP will be
set accordingly.  In the latter case, *\fIoutlen_actual\fP will be
set to zero.
