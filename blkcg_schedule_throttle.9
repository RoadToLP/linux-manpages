.TH "blkcg_schedule_throttle" 9 "blkcg_schedule_throttle" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
blkcg_schedule_throttle \- this task needs to check for throttling
.SH SYNOPSIS
.B "void" blkcg_schedule_throttle
.BI "(struct request_queue *q "  ","
.BI "bool use_memdelay "  ");"
.SH ARGUMENTS
.IP "q" 12
the request queue IO was submitted on
.IP "use_memdelay" 12
do we charge this to memory delay for PSI
.SH "DESCRIPTION"
This is called by the IO controller when we know there's delay accumulated
for the blkg for this task.  We do not pass the blkg because there are places
we call this that may not have that information, the swapping code for
instance will only have a request_queue at that point.  This set's the
notify_resume for the task to check and see if it requires throttling before
returning to user space.

We will only schedule once per syscall.  You can call this over and over
again and it will only do the check once upon return to user space, and only
throttle once.  If the task needs to be throttled again it'll need to be
re-set at the next time we see the task.
