.TH "cpuset_cpus_allowed_fallback" 9 "cpuset_cpus_allowed_fallback" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
cpuset_cpus_allowed_fallback \- final fallback before complete catastrophe.
.SH SYNOPSIS
.B "void" cpuset_cpus_allowed_fallback
.BI "(struct task_struct *tsk "  ");"
.SH ARGUMENTS
.IP "tsk" 12
pointer to task_struct with which the scheduler is struggling
.SH "DESCRIPTION"
In the case that the scheduler cannot find an allowed cpu in
tsk->cpus_allowed, we fall back to task_cs(tsk)->cpus_allowed. In legacy
mode however, this value is the same as task_cs(tsk)->effective_cpus,
which will not contain a sane cpumask during cases such as cpu hotplugging.
This is the absolute last resort for the scheduler and it is only used if
_every_ other avenue has been traveled.
