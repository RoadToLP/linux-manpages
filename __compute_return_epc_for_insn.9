.TH "__compute_return_epc_for_insn" 9 "__compute_return_epc_for_insn" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
__compute_return_epc_for_insn \- Computes the return address and do emulate branch simulation, if required.
.SH SYNOPSIS
.B "int" __compute_return_epc_for_insn
.BI "(struct pt_regs *regs "  ","
.BI "union mips_instruction insn "  ");"
.SH ARGUMENTS
.IP "regs" 12
Pointer to pt_regs
.IP "insn" 12
branch instruction to decode
.SH "RETURN"
-EFAULT on error and forces SIGILL, and on success
returns 0 or BRANCH_LIKELY_TAKEN as appropriate after
evaluating the branch.
.SH "DESCRIPTION"
MIPS R6 Compact branches and forbidden slots:
Compact branches do not throw exceptions because they do
not have delay slots. The forbidden slot instruction ($PC+4)
is only executed if the branch was not taken. Otherwise the
forbidden slot is skipped entirely. This means that the
only possible reason to be here because of a MIPS R6 compact
branch instruction is that the forbidden slot has thrown one.
In that case the branch was not taken, so the EPC can be safely
set to EPC + 8.
