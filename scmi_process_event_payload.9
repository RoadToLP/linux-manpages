.TH "scmi_process_event_payload" 9 "scmi_process_event_payload" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
scmi_process_event_payload \- Dequeue and process an event payload
.SH SYNOPSIS
.B "bool" scmi_process_event_payload
.BI "(struct events_queue *eq "  ","
.BI "struct scmi_registered_events_desc *pd "  ","
.BI "struct scmi_registered_event *r_evt "  ");"
.SH ARGUMENTS
.IP "eq" 12
The queue to use
.IP "pd" 12
The protocol descriptor to use
.IP "r_evt" 12
The registered event descriptor to use
.SH "DESCRIPTION"
Read an event payload from the protocol queue into the dedicated scratch
buffer, fills a custom report and then look for matching event handlers and
call them; skip any unknown event (as marked by \fBscmi_process_event_header\fP)
and in case an anomalously sized read is detected just flush the queue.
.SH "RETURN"
False when the queue is empty
