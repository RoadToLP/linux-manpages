.TH "qcom_mdt_read_metadata" 9 "qcom_mdt_read_metadata" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
qcom_mdt_read_metadata \- read header and metadata from mdt or mbn
.SH SYNOPSIS
.B "void *" qcom_mdt_read_metadata
.BI "(const struct firmware *fw "  ","
.BI "size_t *data_len "  ");"
.SH ARGUMENTS
.IP "fw" 12
firmware of mdt header or mbn
.IP "data_len" 12
length of the read metadata blob
.SH "DESCRIPTION"
The mechanism that performs the authentication of the loading firmware
expects an ELF header directly followed by the segment of hashes, with no
padding inbetween. This function allocates a chunk of memory for this pair
and copy the two pieces into the buffer.

In the case of split firmware the hash is found directly following the ELF
header, rather than at p_offset described by the second program header.

The caller is responsible to free (\fBkfree\fP) the returned pointer.
.SH "RETURN"
pointer to data, or \fBERR_PTR\fP
