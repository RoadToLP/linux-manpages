.TH "comedi_pcmcia_enable" 9 "comedi_pcmcia_enable" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
comedi_pcmcia_enable \- Request the regions and enable the PCMCIA device
.SH SYNOPSIS
.B "int" comedi_pcmcia_enable
.BI "(struct comedi_device *dev "  ","
.BI "int (*conf_check)(struct pcmcia_device *p_dev, void *priv_data) "  ");"
.SH ARGUMENTS
.IP "dev" 12
COMEDI device.
.IP "conf_check" 12
Optional callback to check each configuration option of the
PCMCIA device and request I/O regions.
.SH "DESCRIPTION"
Assuming \fIdev->hw_dev\fP is non-NULL, it is assumed to be pointing to a a
\fIstruct device\fP embedded in a \fIstruct pcmcia_device\fP.  The comedi PCMCIA
driver needs to set the 'config_flags' member in the \fIstruct pcmcia_device\fP,
as appropriate for that driver, before calling this function in order to
allow \fBpcmcia_loop_config\fP to do its internal autoconfiguration.

If \fIconf_check\fP is NULL it is set to a default function.  If is
passed to \fBpcmcia_loop_config\fP and should return 0 if the configuration
is valid and I/O regions requested successfully, otherwise it should return
a negative error value.  The default function returns -EINVAL if the
'config_index' member is 0, otherwise it calls \fBpcmcia_request_io\fP and
returns the result.

If the above configuration check passes, \fBpcmcia_enable_device\fP is called
to set up and activate the PCMCIA device.

If this function returns an error, \fBcomedi_pcmcia_disable\fP should be called
to release requested resources.
.SH "RETURN"
0 on success,
-ENODEV id \fIdev->hw_dev\fP is NULL,
a negative error number from \fBpcmcia_loop_config\fP if it fails,
or a negative error number from \fBpcmcia_enable_device\fP if it fails.
