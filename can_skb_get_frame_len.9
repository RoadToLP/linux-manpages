.TH "can_skb_get_frame_len" 9 "can_skb_get_frame_len" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
can_skb_get_frame_len \- Calculate the CAN Frame length in bytes of a given skb.
.SH SYNOPSIS
.B "unsigned int" can_skb_get_frame_len
.BI "(const struct sk_buff *skb "  ");"
.SH ARGUMENTS
.IP "skb" 12
socket buffer of a CAN message.
.SH "DESCRIPTION"
Do a rough calculation: bit stuffing is ignored and length in bits
is rounded up to a length in bytes.

Rationale: this function is to be used for the BQL functions
(\fBnetdev_sent_queue\fP and \fBnetdev_completed_queue\fP) which expect a
value in bytes. Just using skb->len is insufficient because it will
return the constant value of CAN(FD)_MTU. Doing the bit stuffing
calculation would be too expensive in term of computing resources
for no noticeable gain.

Remarks: The payload of CAN FD frames with BRS flag are sent at a
different bitrate. Currently, the can-utils canbusload tool does
not support CAN-FD yet and so we could not run any benchmark to
measure the impact. There might be possible improvement here.
.SH "RETURN"
length in bytes.
