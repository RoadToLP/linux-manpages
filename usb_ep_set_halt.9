.TH "usb_ep_set_halt" 9 "usb_ep_set_halt" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
usb_ep_set_halt \- sets the endpoint halt feature.
.SH SYNOPSIS
.B "int" usb_ep_set_halt
.BI "(struct usb_ep *ep "  ");"
.SH ARGUMENTS
.IP "ep" 12
the non-isochronous endpoint being stalled
.SH "DESCRIPTION"
Use this to stall an endpoint, perhaps as an error report.
Except for control endpoints,
the endpoint stays halted (will not stream any data) until the host
clears this feature; drivers may need to empty the endpoint's request
queue first, to make sure no inappropriate transfers happen.

Note that while an endpoint CLEAR_FEATURE will be invisible to the
gadget driver, a SET_INTERFACE will not be.  To reset endpoints for the
current altsetting, see \fBusb_ep_clear_halt\fP.  When switching altsettings,
it's simplest to use \fBusb_ep_enable\fP or \fBusb_ep_disable\fP for the endpoints.

This routine may be called in interrupt context.

Returns zero, or a negative error code.  On success, this call sets
underlying hardware state that blocks data transfers.
Attempts to halt IN endpoints will fail (returning -EAGAIN) if any
transfer requests are still queued, or if the controller hardware
(usually a FIFO) still holds bytes that the host hasn't collected.
