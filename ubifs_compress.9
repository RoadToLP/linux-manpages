.TH "ubifs_compress" 9 "ubifs_compress" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
ubifs_compress \- compress data.
.SH SYNOPSIS
.B "void" ubifs_compress
.BI "(const struct ubifs_info *c "  ","
.BI "const void *in_buf "  ","
.BI "int in_len "  ","
.BI "void *out_buf "  ","
.BI "int *out_len "  ","
.BI "int *compr_type "  ");"
.SH ARGUMENTS
.IP "c" 12
-- undescribed --
.IP "in_buf" 12
data to compress
.IP "in_len" 12
length of the data to compress
.IP "out_buf" 12
output buffer where compressed data should be stored
.IP "out_len" 12
output buffer length is returned here
.IP "compr_type" 12
type of compression to use on enter, actually used compression
type on exit
.SH "DESCRIPTION"
This function compresses input buffer \fIin_buf\fP of length \fIin_len\fP and stores
the result in the output buffer \fIout_buf\fP and the resulting length in
\fIout_len\fP. If the input buffer does not compress, it is just copied to the
\fIout_buf\fP. The same happens if \fIcompr_type\fP is UBIFS_COMPR_NONE or if
compression error occurred.

Note, if the input buffer was not compressed, it is copied to the output
buffer and UBIFS_COMPR_NONE is returned in \fIcompr_type\fP.
