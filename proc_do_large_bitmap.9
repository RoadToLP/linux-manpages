.TH "proc_do_large_bitmap" 9 "proc_do_large_bitmap" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
proc_do_large_bitmap \- read/write from/to a large bitmap
.SH SYNOPSIS
.B "int" proc_do_large_bitmap
.BI "(struct ctl_table *table "  ","
.BI "int write "  ","
.BI "void *buffer "  ","
.BI "size_t *lenp "  ","
.BI "loff_t *ppos "  ");"
.SH ARGUMENTS
.IP "table" 12
the sysctl table
.IP "write" 12
TRUE if this is a write to the sysctl file
.IP "buffer" 12
the user buffer
.IP "lenp" 12
the size of the user buffer
.IP "ppos" 12
file position
.SH "DESCRIPTION"
The bitmap is stored at table->data and the bitmap length (in bits)
in table->maxlen.

We use a range comma separated format (e.g. 1,3-4,10-10) so that
large bitmaps may be represented in a compact manner. Writing into
the file will clear the bitmap then update it with the given input.

Returns 0 on success.
