.TH "vscnprintf" 9 "vscnprintf" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
vscnprintf \- Format a string and place it in a buffer
.SH SYNOPSIS
.B "int" vscnprintf
.BI "(char *buf "  ","
.BI "size_t size "  ","
.BI "const char *fmt "  ","
.BI "va_list args "  ");"
.SH ARGUMENTS
.IP "buf" 12
The buffer to place the result into
.IP "size" 12
The size of the buffer, including the trailing null space
.IP "fmt" 12
The format string to use
.IP "args" 12
Arguments for the format string
.SH "DESCRIPTION"
The return value is the number of characters which have been written into
the \fIbuf\fP not including the trailing '\0'. If \fIsize\fP is == 0 the function
returns 0.

If you're not already dealing with a va_list consider using \fBscnprintf\fP.

See the \fBvsnprintf\fP documentation for format string extensions over C99.
