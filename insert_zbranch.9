.TH "insert_zbranch" 9 "insert_zbranch" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
insert_zbranch \- insert a zbranch into a znode.
.SH SYNOPSIS
.B "void" insert_zbranch
.BI "(struct ubifs_info *c "  ","
.BI "struct ubifs_znode *znode "  ","
.BI "const struct ubifs_zbranch *zbr "  ","
.BI "int n "  ");"
.SH ARGUMENTS
.IP "c" 12
UBIFS file-system description object
.IP "znode" 12
znode into which to insert
.IP "zbr" 12
zbranch to insert
.IP "n" 12
slot number to insert to
.SH "DESCRIPTION"
This is a helper function for '\fBtnc_insert\fP'. UBIFS does not allow "gaps" in
znode's array of zbranches and keeps zbranches consolidated, so when a new
zbranch has to be inserted to the \fIznode->zbranches\fP[]' array at the \fIn\fP-th
slot, zbranches starting from \fIn\fP have to be moved right.
