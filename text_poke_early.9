.TH "text_poke_early" 9 "text_poke_early" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
text_poke_early \- Update instructions on a live kernel at boot time
.SH SYNOPSIS
.B "void" text_poke_early
.BI "(void *addr "  ","
.BI "const void *opcode "  ","
.BI "size_t len "  ");"
.SH ARGUMENTS
.IP "addr" 12
address to modify
.IP "opcode" 12
source of the copy
.IP "len" 12
length to copy
.SH "DESCRIPTION"
When you use this code to patch more than one byte of an instruction
you need to make sure that other CPUs cannot execute this code in parallel.
Also no thread must be currently preempted in the middle of these
instructions. And on the local CPU you need to be protected against NMI or
MCE handlers seeing an inconsistent instruction while you patch.
