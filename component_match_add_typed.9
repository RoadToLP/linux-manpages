.TH "component_match_add_typed" 9 "component_match_add_typed" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
component_match_add_typed \- add a component match entry for a typed component
.SH SYNOPSIS
.B "void" component_match_add_typed
.BI "(struct device *master "  ","
.BI "struct component_match **matchptr "  ","
.BI "int (*compare_typed)(struct device *, int, void *) "  ","
.BI "void *compare_data "  ");"
.SH ARGUMENTS
.IP "master" 12
device with the aggregate driver
.IP "matchptr" 12
pointer to the list of component matches
.IP "compare_typed" 12
compare function to match against all typed components
.IP "compare_data" 12
opaque pointer passed to the \fIcompare\fP function
.SH "DESCRIPTION"
Adds a new component match to the list stored in \fImatchptr\fP, which the \fImaster\fP
aggregate driver needs to function. The list of component matches pointed to
by \fImatchptr\fP must be initialized to NULL before adding the first match. This
only matches against components added with \fBcomponent_add_typed\fP.

The allocated match list in \fImatchptr\fP is automatically released using devm
actions.

See also \fBcomponent_match_add_release\fP and \fBcomponent_match_add_typed\fP.
