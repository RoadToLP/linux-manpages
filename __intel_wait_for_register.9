.TH "__intel_wait_for_register" 9 "__intel_wait_for_register" "May 2021" "Kernel Hacker's Manual" LINUX
.SH NAME
__intel_wait_for_register \- wait until register matches expected state
.SH SYNOPSIS
.B "int" __intel_wait_for_register
.BI "(struct intel_uncore *uncore "  ","
.BI "i915_reg_t reg "  ","
.BI "u32 mask "  ","
.BI "u32 value "  ","
.BI "unsigned int fast_timeout_us "  ","
.BI "unsigned int slow_timeout_ms "  ","
.BI "u32 *out_value "  ");"
.SH ARGUMENTS
.IP "uncore" 12
the struct intel_uncore
.IP "reg" 12
the register to read
.IP "mask" 12
mask to apply to register value
.IP "value" 12
expected value
.IP "fast_timeout_us" 12
fast timeout in microsecond for atomic/tight wait
.IP "slow_timeout_ms" 12
slow timeout in millisecond
.IP "out_value" 12
optional placeholder to hold registry value
.SH "DESCRIPTION"
This routine waits until the target register \fIreg\fP contains the expected
\fIvalue\fP after applying the \fImask\fP, i.e. it waits until ::

(intel_uncore_read(uncore, reg) & mask) == value

Otherwise, the wait will timeout after \fItimeout_ms\fP milliseconds.
.SH "RETURN"
0 if the register matches the desired condition, or -ETIMEDOUT.
